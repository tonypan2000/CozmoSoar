sp {chunk*top-pair*apply*complete*t2935-1
    :chunk
    (state <s1> ^list <l1> ^world <n2>
          ^{ << action goal predicate failure heuristic >> <c6> } <a2>)
    (<l1> ^game <g1>)
    (<n2> ^predicates <p2>)
    (<p2> ^predicate <n3>)
    (<n3> ^instance <n4> ^handle <c1>)
    (<n4> ^2 <n5> ^1 <n6>)
    (<a2> ^condition <n1>)
    (<n1> ^rtype single ^negative false ^name <c1> ^type state-pair ^args <a1>
          ^parameter <p1> ^result <r4> ^attribute <c2>)
    (<a1> ^num 2 ^2 <c3> ^1 <c4>)
    (<c3> -^rtype set ^result <r1>)
    (<c4> -^rtype set ^result <r2>)
    (<p1> ^num { < 2 <c5> })
    (<r4> ^set <p4>)
    (<r2> ^set <r3>)
    (<r3> ^instance <i2>)
    (<i2> ^1 <n6>)
    (<r1> ^set <p3>)
    (<p3> ^instance <i1>)
    (<i1> ^1 <n5>)
    -->
    (<p4> ^instance <i3> +)
    (<i3> ^1 <n6> +)
}

sp {chunk*with-attribute*apply*complete*instance*t1507-1
    :chunk
    (state <s1> ^list <l1>
          ^{ << action goal predicate failure heuristic >> <c7> } <a2>)
    (<l1> ^game <g1>)
    (<a2> ^condition <c1>)
    (<c1> ^rtype single ^type attribute ^args <a1> ^negative <c2>
          ^parameter <p1> ^result <r3> ^name <c4> ^attribute <c5>)
    (<p1> ^num { < 2 <c6> })
    (<a1> ^1 <c3>)
    (<r3> ^set <p3>)
    (<c3> ^result <r1>)
    (<r1> ^set <r2>)
    (<r2> ^instance <i1>)
    (<i1> ^1 <n1>)
    (<n1> ^predicates <p2>)
    (<p2> ^<c5> <c4>)
    -->
    (<p3> ^instance <i2> +)
    (<i2> ^1 <n1> +)
}

sp {chunk*with-attribute*apply*complete*instance*objects*OpNoChange*t4079-2
    :chunk
    (state <s1> ^list <l1>
          ^{ << action goal predicate failure heuristic >> <c6> } <a2>)
    (<l1> ^game <g1>)
    (<a2> ^condition <c1>)
    (<c1> ^rtype set ^type attribute ^args <a1> ^negative <c2> ^parameter <p1>
          ^result <r1> ^name <c4> ^attribute <c5>)
    (<a1> ^1 <c3>)
    (<c3> -^rtype set ^result <r2>)
    (<r2> ^set <r3>)
    (<r3> ^instance <i3>)
    (<i3> ^1 <n1>)
    (<n1> ^predicates <p3>)
    (<r1> ^set <p2>)
    (<p2> ^instance <i1>)
    (<i1> ^2 <c4> ^3 <c5> ^1 <i2>)
    (<p3> ^<c5> <c4>)
    -->
    (<i2> ^object <n1> +)
}

sp {chunk*board-between*elaborate*instances*samexy*set*OpNoChange*t4085-2
    :chunk
    (state <s1> ^list <l1>
          ^{ << action goal predicate failure heuristic >> <c11> } <a2>)
    (<l1> ^game <g1>)
    (<a2> ^condition <n1>)
    (<n1> ^function board-between ^rtype set ^name between ^type function
          ^args <a1> ^negative <c1> ^parameter <p1> ^result <r4>)
    (<a1> ^num 3 ^1 <c2> ^2 <c4> ^3 <c3>)
    (<c2> ^rtype set ^result <r3>)
    (<c4> ^result <r6> ^result <r2>)
    (<r6> ^set <p10>)
    (<p10> ^instance <i8>)
    (<i8> ^1 <n6>)
    (<c3> ^result <r5> ^result <r1>)
    (<r5> ^set <p9>)
    (<p9> ^instance <i7>)
    (<i7> ^1 { <> <n6> <n5> })
    (<r4> ^set <p7>)
    (<p7> ^instance <i1>)
    (<i1> ^2 <n2> ^3 <n3> ^1 <i2>)
    (<n2> ^predicates <p3>)
    (<n3> ^predicates <p2>)
    (<r3> ^set <p6>)
    (<p6> ^instance <i5>)
    (<i5> ^1 <i6>)
    (<r2> ^set <p5>)
    (<p5> ^instance <i4>)
    (<i4> ^1 <n2>)
    (<r1> ^set <p4>)
    (<p4> ^instance <i3>)
    (<i3> ^1 <n3>)
    (<p3> ^{ << x y >> <c5> } <c6> ^{ <> <c5> << x y >> <c7> } <c9>)
    (<p2> ^<c5> <c6> ^<c7> <c8>)
    (<i6> ^<c10> <n4>)
    (<n4> ^predicates <p8>)
    (<p8> ^<c5> <c6>)
   -{ (<p8> ^<c7> { >= <c8> >= <c9> <y> } ^<c7> <y>)}
   -{ (<p8> ^<c7> { <= <c8> <= <c9> <y> } ^<c7> <y>)}
    -->
    (<i2> ^object <n4> +)
}

sp {chunk*soar-count*apply*complete*t2474-1
    :chunk
    (state <s1> ^list <l1>
          ^{ << action goal predicate failure heuristic >> <c3> } <a2>)
    (<l1> ^game <g1>)
    (<a2> ^condition <n1>)
    (<n1> ^function soar-count ^type function ^args <a1> ^parameter <p1>
          ^negative <c1> ^result <r2> ^name <c2>)
    (<a1> ^num 1 ^2 <n2>)
    (<p1> ^num 2)
    (<n2> ^rtype set ^result <r1>)
    (<r2> ^set <p3>)
    (<r1> ^set <p2>)
    (<p2> ^instance <i1>)
    (<i1> ^1 <i2>)
   -{ (<i2> -^<something> <s*3>)
      (<s1> ^<a*1> <v*1>)}
    -->
    (<p3> ^instance <p4> +)
    (<p4> ^1 (size <i2>) + ^2 <i2> +)
}

sp {chunk*top-pair*with-type*1param*set*noarg-set1*apply*OpNoChange*t2468-2
    :chunk
    (state <s1> ^list <l1> ^world <n2>
          ^{ << action goal predicate failure heuristic >> <c7> } <a2>)
    (<l1> ^game <g1>)
    (<n2> ^predicates <p2>)
    (<p2> ^predicate <n3>)
    (<n3> ^instance <n4> ^handle <c1>)
    (<n4> ^2 <n5> ^1 <n6>)
    (<a2> ^condition <n1>)
    (<n1> ^rtype set ^negative false ^name <c1> ^type state-pair ^args <a1>
          ^parameter <p1> ^result <r3> ^attribute <c2>)
    (<a1> ^num 2 ^2 <c3> ^1 <c4> ^2 <c5> ^1 <c6>)
    (<p1> ^num 2)
    (<c3> -^rtype set ^result <r1>)
    (<c4> -^rtype set ^result <r2>)
    (<c5> ^result <r4>)
    (<r4> ^set <p6>)
    (<p6> ^instance <i5>)
    (<i5> ^1 <n7>)
    (<r3> ^set <p5>)
    (<p5> ^instance <i3>)
    (<i3> ^2 <n5> ^1 <i4>)
    (<r2> ^set <p4>)
    (<p4> ^instance <i2>)
    (<i2> ^1 <n6>)
    (<r1> ^set <p3>)
    (<p3> ^instance <i1>)
    (<i1> ^1 <n5>)
    -->
    (<i4> ^object <n6> +)
}

sp {chunk*soar-compare*greater*OpNoChange*t2479-1
    :chunk
    (state <s1> ^list <l1>
          ^{ << action goal predicate failure heuristic >> <c5> } <a2>)
    (<l1> ^game <g1>)
    (<a2> ^condition <n1>)
    (<n1> ^function soar-greater ^type function ^args <a1> ^parameter <p1>
          ^negative <c1> ^result <r3> ^name <c2>)
    (<a1> ^num 2 ^2 <f1> ^1 <n2>)
    (<p1> ^num 1)
    (<r3> ^set <p4>)
    (<n2> ^result <r2>)
    (<r2> ^set <p2>)
    (<p2> ^instance <p3>)
    (<p3> ^1 <c4>)
    (<f1> ^result <r1>)
    (<r1> ^set <i1>)
    (<i1> ^instance <i2>)
    (<i2> ^1 { < <c4> <c3> })
    -->
    (<p4> ^instance <i3> +)
    (<i3> ^1 <c4> +)
}

sp {chunk*top-pair*apply*complete*t3934-1
    :chunk
    (state <s1> ^list <l1>
          ^{ << action goal predicate failure heuristic >> <c5> } <a2>)
    (<l1> ^game <g1>)
    (<a2> ^condition <n1>)
    (<n1> ^rtype set ^negative false ^type state-pair ^args <a1>
          ^parameter <p1> ^result <r2> ^name <c1> ^attribute <c2>)
    (<a1> ^num 2 ^2 <c3> ^1 <c4>)
    (<p1> ^num 2)
    (<c3> -^rtype set ^result <r1>)
    (<c4> -^rtype set)
    (<r2> ^set <p3>)
    (<r1> ^set <p2>)
    (<p2> ^instance <i1>)
    (<i1> ^1 <n2>)
    -->
    (<p3> ^instance <i2> +)
    (<i2> ^2 <n2> + ^1 <i3> +)
}

sp {chunk*top-pair*apply*complete*t4508-1
    :chunk
    (state <s1> ^list <l1> ^world <n2>
          ^{ << action goal predicate failure heuristic >> <c5> } <a2>)
    (<l1> ^game <g1>)
    (<n2> ^predicates <p2>)
    (<p2> ^predicate <n3>)
    (<n3> ^handle <c1>)
    (<a2> ^condition <n1>)
    (<n1> ^rtype set ^negative false ^name <c1> ^type state-pair ^args <a1>
          ^parameter <p1> ^result <r2> ^attribute <c2>)
    (<a1> ^num 2 ^2 <c3> ^1 <c4>)
    (<p1> ^num 1)
    (<c3> -^rtype set)
    (<c4> ^rtype set ^result <r1>)
    (<r2> ^set <p4>)
    (<r1> ^set <p3>)
    (<p3> ^instance <i1>)
    (<i1> ^1 <i2>)
   -{ (<i2> -^<x1> <x*1>)
      (<s1> ^<a*1> <v*1>)}
   -{ (<i2> ^<elem> <e>)
     -{ (<n3> ^instance <instance1>)
        (<instance1> ^1 <e> ^2 <objb>)
        (<c3> ^result <r*2>)
        (<r*2> ^set <s*4>)
        (<s*4> ^instance <i*2>)
        (<i*2> ^1 <objb>)}}
    -->
    (<p4> ^instance <i3> +)
    (<i3> ^1 <i2> +)
}

sp {chunk*attribute-of*apply*complete*t3380-1
    :chunk
    (state <s1> ^list <l1>
          ^{ << action goal predicate failure heuristic >> <c5> } <a2>)
    (<l1> ^game <g1>)
    (<a2> ^condition <n1>)
    (<n1> ^type attribute-of ^args <a1> ^parameter <p1> ^negative <c1>
          ^result <r4> ^result <r1> ^name <c2>)
    (<a1> ^num 1 ^2 <c3>)
    (<p1> ^num 2)
    (<c3> -^rtype set ^result <r2>)
    (<r4> ^set <p4>)
    (<r2> ^set <r3>)
    (<r3> ^instance <i1>)
    (<i1> ^1 <n2>)
    (<n2> ^predicates <p3>)
    (<r1> ^set <p2>)
    (<p3> ^<c2> <c4>)
    -->
    (<p4> ^instance <i2> +)
    (<i2> ^2 <n2> + ^1 <c4> +)
}

sp {chunk*top-pair*apply*complete*t1896-1
    :chunk
    (state <s1> ^list <l1> ^world <n2>
          ^{ << action goal predicate failure heuristic >> <c6> } <a2>)
    (<l1> ^game <g1>)
    (<n2> ^predicates <p2>)
    (<p2> ^predicate <n3>)
    (<n3> ^handle <c1>)
    (<a2> ^condition <n1>)
    (<n1> ^rtype single ^negative true ^name <c1> ^type state-pair ^args <a1>
          ^parameter <p1> ^result <r3> ^attribute <c2>)
    (<a1> ^num 2 ^1 <c3> ^2 <c5>)
    (<c3> -^rtype set ^result <r1>)
    (<p1> ^num { < 2 <c4> })
    (<r3> ^set <p3>)
    (<r1> ^set <r2>)
    (<r2> ^instance <i1>)
    (<i1> ^1 <n4>)
   -{ (<n3> ^instance <instance>)
      (<instance> ^1 <n4> ^2 <objb>)
      (<c5> ^result <r*2>)
      (<r*2> ^set <s*4>)
      (<s*4> ^instance <i*2>)
      (<i*2> ^1 <objb>)}
    -->
    (<p3> ^instance <i2> +)
    (<i2> ^1 <n4> +)
}

sp {chunk*with-attribute*apply*complete*instance*t1890-1
    :chunk
    (state <s1> ^list <l1> ^world <n1>
          ^{ << action goal predicate failure heuristic >> <c4> } <a3>)
    (<l1> ^game <g1>)
    (<n1> ^objects <c3>)
    (<a3> ^condition <c1>)
    (<c1> ^rtype single ^name object ^type attribute ^attribute primitive
          ^args <a2> ^negative <c2> ^parameter <p1> ^result <r1>)
    (<a2> -^1 <a1>)
    (<r1> ^set <p2>)
    (<c3> ^object <n2>)
    (<n2> -^handle self)
    -->
    (<p2> ^instance <i1> +)
    (<i1> ^1 <n2> +)
}

sp {chunk*top-pair*apply*complete*t1257-1
    :chunk
    (state <s1> ^list <l1> ^world <n2>
          ^{ << action goal predicate failure heuristic >> <c5> } <a2>)
    (<l1> ^game <g1>)
    (<n2> ^predicates <p2>)
    (<p2> ^predicate <n3>)
    (<n3> ^handle <c1>)
    (<a2> ^condition <n1>)
    (<n1> ^rtype single ^negative true ^name <c1> ^type state-pair ^args <a1>
          ^parameter <p1> ^result <r5> ^attribute <c2>)
    (<a1> ^num 2 ^2 <c3> ^1 <c4>)
    (<p1> ^num 2)
    (<c3> -^rtype set ^result <r1>)
    (<c4> -^rtype set ^result <r3>)
    (<r5> ^set <p3>)
    (<r3> ^set <r4>)
    (<r4> ^instance <i2>)
    (<i2> ^1 <n5>)
    (<r1> ^set <r2>)
    (<r2> ^instance <i1>)
    (<i1> ^1 { <> <n5> <n4> })
   -{ (<n3> ^instance <instance1>)
      (<instance1> ^2 <n4> ^1 <n5>)}
    -->
    (<p3> ^instance <i3> +)
    (<i3> ^2 <n4> + ^1 <n5> +)
}

sp {chunk*soar-compare*greater*param-2*OpNoChange*t2141-1
    :chunk
    (state <s1> ^list <l1>
          ^{ << action goal predicate failure heuristic >> <c5> } <a2>)
    (<l1> ^game <g1>)
    (<a2> ^condition <n1>)
    (<n1> ^function soar-greater ^type function ^args <a1> ^parameter <p1>
          ^negative <c1> ^result <r3> ^name <c2>)
    (<a1> ^num 2 ^2 <n2> ^1 <n3>)
    (<p1> ^num 2)
    (<r3> ^set <p4>)
    (<n3> ^result <r2>)
    (<r2> ^set <p3>)
    (<p3> ^instance <i2>)
    (<i2> ^1 <c4>)
    (<n2> ^result <r1>)
    (<r1> ^set <p2>)
    (<p2> ^instance <i1>)
    (<i1> ^1 { < <c4> <c3> })
    -->
    (<p4> ^instance <i3> +)
    (<i3> ^1 <c4> + ^2 <c3> +)
}

sp {chunk*with-attribute*apply*complete*instance*t3710-1
    :chunk
    (state <s1> ^list <l1>
          ^{ << action goal predicate failure heuristic >> <c6> } <a2>)
    (<l1> ^game <g1>)
    (<a2> ^condition <c1>)
    (<c1> ^rtype set ^type attribute ^args <a1> ^negative <c2> ^parameter <p1>
          ^result <r1> ^name <c4> ^attribute <c5>)
    (<a1> ^1 <c3>)
    (<c3> -^rtype set)
    (<r1> ^set <p2>)
    -->
    (<p2> ^instance <i1> +)
    (<i1> ^2 <c4> + ^3 <c5> + ^1 <i2> +)
}

sp {chunk*top-pair*apply*complete*t2505-1
    :chunk
    (state <s1> ^list <l1> ^world <n2>
          ^{ << action goal predicate failure heuristic >> <c5> } <a2>)
    (<l1> ^game <g1>)
    (<n2> ^predicates <p2>)
    (<p2> ^predicate <n3>)
    (<n3> ^instance <n4> ^handle <c1>)
    (<n4> ^2 <n5> ^1 <n6>)
    (<a2> ^condition <n1>)
    (<n1> ^rtype single ^negative false ^name <c1> ^type state-pair ^args <a1>
          ^parameter <p1> ^result <r3> ^attribute <c2>)
    (<a1> ^num 2 ^2 <c3> ^1 <c4>)
    (<p1> ^num 2)
    (<c3> -^rtype set ^result <r1>)
    (<c4> -^rtype set ^result <r2>)
    (<r3> ^set <p5>)
    (<r2> ^set <p4>)
    (<p4> ^instance <i2>)
    (<i2> ^1 <n6>)
    (<r1> ^set <p3>)
    (<p3> ^instance <i1>)
    (<i1> ^1 <n5>)
    -->
    (<p5> ^instance <i3> +)
    (<i3> ^2 <n5> + ^1 <n6> +)
}

sp {chunk*board-between*elaborate*object*instance*t4085-1
    :chunk
    (state <s1> ^list <l1>
          ^{ << action goal predicate failure heuristic >> <c6> } <a2>)
    (<l1> ^game <g1>)
    (<a2> ^condition <n1>)
    (<n1> ^function board-between ^rtype set ^type function ^args <a1>
          ^negative <c1> ^parameter <p1> ^result <r3> ^name <c2>)
    (<a1> ^num 3 ^2 <c4> ^3 <c3> ^1 <c5>)
    (<r3> ^set <p4>)
    (<c4> ^result <r2>)
    (<r2> ^set <p3>)
    (<p3> ^instance <i2>)
    (<i2> ^1 <n3>)
    (<c3> ^result <r1>)
    (<r1> ^set <p2>)
    (<p2> ^instance <i1>)
    (<i1> ^1 { <> <n3> <n2> })
    -->
    (<p4> ^instance <i3> +)
    (<i3> ^1 <i4> + ^3 <n2> + ^2 <n3> +)
}

sp {chunk*top-pair*apply*complete*t4349-1
    :chunk
    (state <s1> ^list <l1> ^world <n1>
          ^{ << action goal predicate failure heuristic >> <c6> } <a2>)
    (<l1> ^game <g1>)
    (<n1> ^predicates <p2>)
    (<p2> ^predicate <n2>)
    (<n2> ^instance <n3> ^handle <c2>)
    (<n3> ^1 <n4>)
   -{ (<n4> -^<x1> <x*1>)
      (<s1> ^<a*1> <v*1>)}
    (<a2> ^condition <c1>)
    (<c1> ^rtype set ^negative false ^name <c2> ^type state-pair ^args <a1>
          ^parameter <p1> ^result <r1> ^attribute <c3>)
    (<a1> ^num 1 ^1 <c4>)
    (<c4> -^rtype set)
   -{ (<n4> ^<elem> <obja>)
     -{ (<c4> ^result <r*1>)
        (<r*1> ^set <s*3>)
        (<s*3> ^instance <i*1>)
        (<i*1> ^1 <obja>)}}
    (<p1> ^num { < 2 <c5> })
    (<r1> ^set <p3>)
    -->
    (<p3> ^instance <i1> +)
    (<i1> ^1 <n4> +)
}
