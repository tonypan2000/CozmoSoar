sp {chunk*chunk-puzzle-impasse*apply*complete*OpNoChange*t3941-2
    :chunk
    (state <s1> ^retrieve-game fifteen-puzzle-iso1 -^opponent <o1>)
    -->
    (<s1> ^retrieve-handle action-default43 +)
}

sp {chunk*chunk-puzzle-impasse*apply*complete*OpNoChange*t3941-1
    :chunk
    (state <s1> ^retrieve-game fifteen-puzzle-iso1 -^opponent <o1>)
    -->
    (<s1> ^retrieve-handle goal-default54 +)
}

sp {chunk*chunk-predicate-impasse*apply*complete*action*OpNoChange*t3830-1
    :chunk
    (state <s1> ^gtype goal ^retrieve-handle goal-default54)
    -->
    (<s1> ^goal <g1> +)
    (<g1> ^potential-args <p1> + ^parameter-set <p2> + ^formated predicate +
           ^primary-rtype set + ^nlp-set <n1> + ^aname goal-default54 +
           ^handle goal-default54 +)
    (<p2> ^argnum 2 +)
    (<n1> ^conditions <c1> + ^conditions <c2> + ^aname goal-default54 +)
    (<c1> ^function soar-count + ^return-type number + ^rtype single +
           ^args <a1> + ^negative false + ^parameter <p6> + ^result <r4> +
           ^name count + ^type function +)
    (<a1> ^num 1 + ^2 <i1> +)
    (<i1> ^rtype set + ^args <a2> + ^negative false + ^parameter <p5> +
           ^result <r3> + ^attribute predicate + ^name matched +
           ^type concept +)
    (<a2> ^num 1 + ^1 <i2> +)
    (<i2> ^rtype single + ^args <a3> + ^negative false + ^parameter <p4> +
           ^result <r2> + ^attribute category + ^name location +
           ^type attribute +)
    (<a3> ^num 1 + ^1 <i3> +)
    (<i3> ^rtype single + ^args <a4> + ^negative false + ^parameter <p3> +
           ^result <r1> + ^attribute primitive + ^name object +
           ^type attribute +)
    (<p3> ^num 0 +)
    (<r1> ^set <s2> +)
    (<p4> ^num 0 +)
    (<r2> ^set <s3> +)
    (<p5> ^num 1 + ^1 <i4> +)
    (<i4> ^param-id 1 + ^type set +)
    (<r3> ^set <s4> +)
    (<p6> ^num 2 + ^2 <i5> + ^1 <i6> +)
    (<i5> ^param-id 1 + ^type set +)
    (<i6> ^param-id 2 + ^type single +)
    (<r4> ^set <s5> +)
    (<c2> ^return-type number + ^rtype single + ^args <a5> + ^negative false +
           ^parameter <p7> + ^result <r5> + ^name number +)
    (<p7> ^num 1 + ^1 <i7> +)
    (<i7> ^param-id 2 + ^type single +)
    (<r5> ^set <s6> +)
    (<s6> ^instance <i8> +)
    (<i8> ^1 15 +)
}

sp {chunkx4*soar-count*apply*complete*OpNoChange*t3818-1
    :chunk
    (state <s1> ^list <l1>
          ^{ <a1> << action goal predicate failure heuristic >> } <a2>)
    (<l1> ^game <g1>)
    (<a2> ^condition <c1>)
    (<c1> ^function soar-count ^type function ^args <a3> ^parameter <p1>
          ^negative <n1> ^result <r1> ^name <n2>)
    (<a3> ^num 1 ^2 <i1>)
    (<p1> ^num 2)
    (<i1> ^rtype set ^result <r2>)
    (<r1> ^set <s2>)
    (<r2> ^set <s3>)
    (<s3> ^instance <i2>)
    (<i2> ^1 <i3>)
   -{ (<i3> -^<a4> <a5>)
      (<s1> ^<a6> <a7>)}
    -->
    (<s2> ^instance <i4> +)
    (<i4> ^1 (size <i3>) + ^2 <i3> +)
}

sp {chunk*chunk-predicate-impasse*apply*complete*OpNoChange*t3464-1
    :chunk
    (state <s1> ^gtype <g1> ^<g1> <g2>)
    (<g2> ^condition <c1>)
    (<c1> ^name matched ^type concept ^attribute predicate)
    -->
    (<s1> ^predicate <p1> + ^gtype predicate +)
    (<p1> ^link <c1> + ^potential-args <p2> + ^parameter-set <p3> +
           ^formated predicate + ^primary-rtype single + ^nlp-set <n1> +
           ^aname matched + ^handle matched +)
    (<p3> ^argnum 3 +)
    (<n1> ^conditions <c2> + ^conditions <c3> + ^conditions <c4> +
           ^aname matched +)
    (<c2> ^rtype single + ^args <a1> + ^negative false + ^parameter <p4> +
           ^result <r1> + ^attribute prepositions + ^name on1 +
           ^type state-pair +)
    (<a1> ^num 2 + ^2 <i1> + ^1 <i2> +)
    (<p4> ^num 2 + ^2 <i3> + ^1 <i4> +)
    (<i3> ^param-id 1 + ^type single +)
    (<i4> ^param-id 2 + ^type single +)
    (<r1> ^set <s2> +)
    (<i2> ^rtype single + ^args <a2> + ^negative false + ^parameter <p6> +
           ^result <r3> + ^attribute category + ^name block +
           ^type attribute +)
    (<a2> ^num 1 + ^1 <i5> +)
    (<i5> ^rtype single + ^args <a3> + ^negative false + ^parameter <p5> +
           ^result <r2> + ^attribute primitive + ^name object +
           ^type attribute +)
    (<p5> ^num 0 +)
    (<r2> ^set <s3> +)
    (<p6> ^num 0 +)
    (<r3> ^set <s4> +)
    (<c3> ^return-type number + ^rtype single + ^args <a4> + ^negative false +
           ^parameter <p7> + ^result <r4> + ^name value + ^type attribute-of +)
    (<a4> ^num 1 + ^2 <i2> +)
    (<p7> ^num 2 + ^2 <i6> + ^1 <i7> +)
    (<i6> ^param-id 2 + ^type single +)
    (<i7> ^param-id 3 + ^type single +)
    (<r4> ^set <s5> +)
    (<i1> ^rtype single + ^args <a5> + ^negative false + ^parameter <p8> +
           ^result <r5> + ^attribute input-arg + ^name object +)
    (<p8> ^num 1 + ^1 <i8> +)
    (<i8> ^param-id 1 + ^type single +)
    (<r5> ^set <s6> +)
    (<c4> ^return-type number + ^rtype single + ^args <a6> + ^negative false +
           ^parameter <p9> + ^result <r6> + ^name value + ^type attribute-of +)
    (<a6> ^num 1 + ^2 <i1> +)
    (<p9> ^num 2 + ^2 <i9> + ^1 <i10> +)
    (<i9> ^param-id 1 + ^type single +)
    (<i10> ^param-id 3 + ^type single +)
    (<r6> ^set <s7> +)
}

sp {chunkx4*attribute-of*apply*complete*OpNoChange*t3449-1
    :chunk
    (state <s1> ^list <l1>
          ^{ <a1> << action goal predicate failure heuristic >> } <a2>)
    (<l1> ^game <g1>)
    (<a2> ^condition <c1>)
    (<c1> ^type attribute-of ^args <a3> ^parameter <p1> ^negative <n1>
          ^result <r1> ^result <r3> ^name <n2>)
    (<a3> ^num 1 ^2 <i1>)
    (<p1> ^num 2)
    (<i1> -^rtype set ^result <r2>)
    (<r1> ^set <s2>)
    (<r2> ^set <s3>)
    (<s3> ^instance <i2>)
    (<i2> ^1 <i3>)
    (<i3> ^predicates <p2>)
    (<r3> ^set <s4>)
    (<p2> ^<n2> <n3>)
    -->
    (<s2> ^instance <i4> +)
    (<i4> ^2 <i3> + ^1 <n3> +)
}

sp {chunk*chunk-predicate-impasse*apply*complete*action*OpNoChange*t2565-1
    :chunk
    (state <s1> ^gtype action ^retrieve-handle action-default43)
    -->
    (<s1> ^action <a1> +)
    (<a1> ^potential-args <p1> + ^parameter-set <p2> + ^formated predicate +
           ^primary-rtype single + ^nlp-set <n1> + ^verb-structure <v1> +
           ^aname action-default43 + ^handle action-default43 +)
    (<p2> ^argnum 3 +)
    (<n1> ^conditions <c1> + ^conditions <c2> + ^aname action-default43 +)
    (<c1> ^rtype single + ^args <a2> + ^negative false + ^parameter <p6> +
           ^result <r4> + ^attribute predicate + ^name adjacent +
           ^type concept +)
    (<a2> ^num 2 + ^2 <i1> + ^1 <i4> +)
    (<i1> ^rtype single + ^args <a3> + ^negative false + ^parameter <p5> +
           ^result <r3> + ^attribute predicate + ^name clear + ^type concept +)
    (<a3> ^num 1 + ^1 <i2> +)
    (<i2> ^rtype single + ^args <a4> + ^negative false + ^parameter <p4> +
           ^result <r2> + ^attribute category + ^name location +
           ^type attribute +)
    (<a4> ^num 1 + ^1 <i3> +)
    (<i3> ^rtype single + ^args <a5> + ^negative false + ^parameter <p3> +
           ^result <r1> + ^attribute primitive + ^name object +
           ^type attribute +)
    (<p3> ^num 0 +)
    (<r1> ^set <s2> +)
    (<p4> ^num 0 +)
    (<r2> ^set <s3> +)
    (<p5> ^num 0 +)
    (<r3> ^set <s4> +)
    (<p6> ^num 2 + ^2 <i5> + ^1 <i6> +)
    (<i5> ^param-id 2 + ^type single +)
    (<i6> ^param-id 3 + ^type single +)
    (<r4> ^set <s5> +)
    (<i4> ^rtype single + ^args <a6> + ^negative false + ^parameter <p8> +
           ^result <r6> + ^attribute category + ^name location +
           ^type attribute +)
    (<a6> ^num 1 + ^1 <i7> +)
    (<i7> ^rtype single + ^args <a7> + ^negative false + ^parameter <p7> +
           ^result <r5> + ^attribute primitive + ^name object +
           ^type attribute +)
    (<p7> ^num 0 +)
    (<r5> ^set <s6> +)
    (<p8> ^num 0 +)
    (<r6> ^set <s7> +)
    (<c2> ^rtype single + ^args <a8> + ^negative false + ^parameter <p11> +
           ^result <r9> + ^attribute prepositions + ^name on1 +
           ^type state-pair +)
    (<a8> ^num 2 + ^2 <i4> + ^1 <i8> +)
    (<i8> ^rtype single + ^args <a9> + ^negative false + ^parameter <p10> +
           ^result <r8> + ^attribute category + ^name block +
           ^type attribute +)
    (<a9> ^num 1 + ^1 <i9> +)
    (<i9> ^rtype single + ^args <a10> + ^negative false + ^parameter <p9> +
           ^result <r7> + ^attribute primitive + ^name object +
           ^type attribute +)
    (<p9> ^num 0 +)
    (<r7> ^set <s8> +)
    (<p10> ^num 0 +)
    (<r8> ^set <s9> +)
    (<p11> ^num 2 + ^2 <i10> + ^1 <i11> +)
    (<i10> ^param-id 3 + ^type single +)
    (<i11> ^param-id 1 + ^type single +)
    (<r9> ^set <s10> +)
    (<v1> ^1 <i12> +)
    (<i12> ^verb-prep on1 + ^verb-name move1 + ^2 2 + ^1 1 +)
}

sp {chunkx4*with-attribute*apply*complete*instance*OpNoChange*t2551-1
    :chunk
    (state <s1> ^list <l1>
          ^{ <a1> << action goal predicate failure heuristic >> } <a2>)
    (<l1> ^game <g1>)
    (<a2> ^condition <c1>)
    (<c1> ^rtype single ^type attribute ^args <a3> ^negative <n1>
          ^parameter <p1> ^result <r1> ^name <n3> ^attribute <a4>)
    (<p1> ^num { <n2> < 2 })
    (<a3> ^1 <i1>)
    (<r1> ^set <s2>)
    (<i1> ^result <r2>)
    (<r2> ^set <s3>)
    (<s3> ^instance <i2>)
    (<i2> ^1 <i3>)
    (<i3> ^predicates <p2>)
    (<p2> ^<a4> <n3>)
    -->
    (<s2> ^instance <i4> +)
    (<i4> ^1 <i3> +)
}

sp {chunk*chunk-predicate-impasse*apply*complete*OpNoChange*t1967-1
    :chunk
    (state <s1> ^gtype <g1> ^<g1> <g2>)
    (<g2> ^condition <c1>)
    (<c1> ^name clear ^type concept ^attribute predicate)
    -->
    (<s1> ^predicate <p1> + ^gtype predicate +)
    (<p1> ^link <c1> + ^potential-args <p2> + ^parameter-set <p3> +
           ^formated predicate + ^primary-rtype single + ^nlp-set <n1> +
           ^aname clear + ^handle clear +)
    (<p3> ^argnum 1 +)
    (<n1> ^conditions <c2> + ^aname clear +)
    (<c2> ^rtype single + ^args <a1> + ^negative true + ^parameter <p6> +
           ^result <r3> + ^attribute prepositions + ^name below1 +
           ^type state-pair +)
    (<a1> ^num 2 + ^2 <i1> + ^1 <i2> +)
    (<i1> ^rtype single + ^args <a2> + ^negative false + ^parameter <p4> +
           ^result <r1> + ^attribute primitive + ^name object +
           ^type attribute +)
    (<p4> ^num 0 +)
    (<r1> ^set <s2> +)
    (<i2> ^rtype single + ^args <a3> + ^negative false + ^parameter <p5> +
           ^result <r2> + ^attribute input-arg + ^name object +)
    (<p5> ^num 1 + ^1 <i3> +)
    (<i3> ^param-id 1 + ^type single +)
    (<r2> ^set <s3> +)
    (<p6> ^num 1 + ^1 <i4> +)
    (<i4> ^param-id 1 + ^type single +)
    (<r3> ^set <s4> +)
}

sp {chunkx4*top-pair*apply*complete*OpNoChange*t1952-1
    :chunk
    (state <s1> ^list <l1> ^world <w1>
          ^{ <a1> << action goal predicate failure heuristic >> } <a2>)
    (<l1> ^game <g1>)
    (<w1> ^predicates <p1>)
    (<a2> ^condition <c1>)
    (<c1> ^rtype single ^negative true ^type state-pair ^args <a3>
          ^parameter <p2> ^result <r1> ^name <n2> ^attribute <a4>)
    (<a3> ^num 2 ^1 <i1> ^2 <i2>)
    (<i1> -^rtype set ^result <r2>)
    (<p2> ^num { <n1> < 2 })
    (<r1> ^set <s2>)
    (<r2> ^set <s3>)
    (<s3> ^instance <i3>)
    (<i3> ^1 <i4>)
    (<p1> ^predicate <p3>)
   -{ (<p3> ^instance <i5>)
      (<i5> ^1 <i4> ^2 <i6>)
      (<i2> ^result <r3>)
      (<r3> ^set <s4>)
      (<s4> ^instance <i7>)
      (<i7> ^1 <i6>)}
    (<p3> ^handle <n2>)
    -->
    (<s2> ^instance <i8> +)
    (<i8> ^1 <i4> +)
}

sp {chunkx4*with-attribute*apply*complete*instance*OpNoChange*t1946-1
    :chunk
    (state <s1> ^list <l1> ^world <w1>
          ^{ <a1> << action goal predicate failure heuristic >> } <a2>)
    (<l1> ^game <g1>)
    (<w1> ^objects <o1>)
    (<a2> ^condition <c1>)
    (<c1> ^rtype single ^name object ^type attribute ^attribute primitive
          ^args <a3> ^negative <n1> ^parameter <p1> ^result <r1>)
    (<a3> -^1 <i1>)
    (<r1> ^set <s2>)
    (<o1> ^object <o2>)
    (<o2> -^handle self)
    -->
    (<s2> ^instance <i2> +)
    (<i2> ^1 <o2> +)
}

sp {chunk*chunk-predicate-impasse*apply*complete*OpNoChange*t1323-1
    :chunk
    (state <s1> ^gtype <g1> ^<g1> <g2>)
    (<g2> ^condition <c1>)
    (<c1> ^name adjacent ^type concept ^attribute predicate)
    -->
    (<s1> ^predicate <p1> + ^gtype predicate +)
    (<p1> ^link <c1> + ^potential-args <p2> + ^parameter-set <p3> +
           ^formated predicate + ^primary-rtype single + ^nlp-set <n1> +
           ^aname adjacent + ^handle adjacent +)
    (<p3> ^argnum 2 +)
    (<n1> ^conditions <c2> + ^conditions <c3> + ^aname adjacent +)
    (<c2> ^rtype single + ^args <a1> + ^negative true + ^parameter <p4> +
           ^result <r1> + ^attribute prepositions + ^name diagonal-with1 +
           ^type state-pair +)
    (<a1> ^num 2 + ^2 <i1> + ^1 <i2> +)
    (<p4> ^num 2 + ^2 <i3> + ^1 <i4> +)
    (<i3> ^param-id 2 + ^type single +)
    (<i4> ^param-id 1 + ^type single +)
    (<r1> ^set <s2> +)
    (<i1> ^rtype single + ^args <a2> + ^negative false + ^parameter <p5> +
           ^result <r2> + ^attribute input-arg + ^name object +)
    (<p5> ^num 1 + ^1 <i5> +)
    (<i5> ^param-id 2 + ^type single +)
    (<r2> ^set <s3> +)
    (<i2> ^rtype single + ^args <a3> + ^negative false + ^parameter <p6> +
           ^result <r3> + ^attribute input-arg + ^name object +)
    (<p6> ^num 1 + ^1 <i6> +)
    (<i6> ^param-id 1 + ^type single +)
    (<r3> ^set <s4> +)
    (<c3> ^rtype single + ^args <a4> + ^negative false + ^parameter <p7> +
           ^result <r4> + ^attribute prepositions + ^name near1 +
           ^type state-pair +)
    (<a4> ^num 2 + ^2 <i1> + ^1 <i2> +)
    (<p7> ^num 2 + ^2 <i7> + ^1 <i8> +)
    (<i7> ^param-id 2 + ^type single +)
    (<i8> ^param-id 1 + ^type single +)
    (<r4> ^set <s5> +)
}

sp {chunkx4*top-pair*apply*complete*OpNoChange*t1308-1
    :chunk
    (state <s1> ^list <l1> ^world <w1>
          ^{ <a1> << action goal predicate failure heuristic >> } <a2>)
    (<l1> ^game <g1>)
    (<w1> ^predicates <p1>)
    (<a2> ^condition <c1>)
    (<c1> ^rtype single ^negative false ^type state-pair ^args <a3>
          ^parameter <p2> ^result <r1> ^name <n1> ^attribute <a4>)
    (<a3> ^num 2 ^2 <i1> ^1 <i2>)
    (<p2> ^num 2)
    (<i1> -^rtype set ^result <r3>)
    (<i2> -^rtype set ^result <r2>)
    (<r1> ^set <s2>)
    (<r2> ^set <s3>)
    (<s3> ^instance <i3>)
    (<i3> ^1 <i4>)
    (<r3> ^set <s4>)
    (<s4> ^instance <i5>)
    (<i5> ^1 <i6>)
    (<p1> ^predicate <p3>)
    (<p3> ^handle <n1> ^instance <i7>)
    (<i7> ^2 <i6> ^1 <i4>)
    -->
    (<s2> ^instance <i8> +)
    (<i8> ^2 <i6> + ^1 <i4> +)
}

sp {chunkx4*top-pair*apply*complete*OpNoChange*t1302-1
    :chunk
    (state <s1> ^list <l1> ^world <w1>
          ^{ <a1> << action goal predicate failure heuristic >> } <a2>)
    (<l1> ^game <g1>)
    (<w1> ^predicates <p1>)
    (<a2> ^condition <c1>)
    (<c1> ^rtype single ^negative true ^type state-pair ^args <a3>
          ^parameter <p2> ^result <r1> ^name <n1> ^attribute <a4>)
    (<a3> ^num 2 ^2 <i1> ^1 <i2>)
    (<p2> ^num 2)
    (<i1> -^rtype set ^result <r3>)
    (<i2> -^rtype set ^result <r2>)
    (<r1> ^set <s2>)
    (<r2> ^set <s3>)
    (<s3> ^instance <i3>)
    (<i3> ^1 <i4>)
    (<r3> ^set <s4>)
    (<s4> ^instance <i5>)
    (<i5> ^1 { <i6> <> <i4> })
    (<p1> ^predicate <p3>)
   -{ (<p3> ^instance <i7>)
      (<i7> ^2 <i6> ^1 <i4>)}
    (<p3> ^handle <n1>)
    -->
    (<s2> ^instance <i8> +)
    (<i8> ^2 <i6> + ^1 <i4> +)
}



