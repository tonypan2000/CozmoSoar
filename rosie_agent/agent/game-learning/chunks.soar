#storing chunks because delay while learning causes issues when learning this and count in a certain way,
#makes initially bad count
sp {chunkx4*with-attribute*apply*complete*instance*objects*OpNoChange*t10663-2
    :chunk
    (state <s1> ^list <l1>
          ^{ <a1> << action goal predicate failure heuristic >> } <a2>)
    (<l1> ^game <g1>)
    (<a2> ^condition <c1>)
    (<c1> ^rtype set ^type attribute ^negative <n1> ^parameter <p1> ^args <a3>
          ^result <r2> ^attribute <i5> ^name <i6>)
    (<a3> ^1 <i1>)
    (<i1> -^rtype set ^result <r1>)
    (<r1> ^set <s2>)
    (<s2> ^instance <i2>)
    (<i2> ^1 <i3>)
    (<i3> ^predicates <p2>)
    (<r2> ^set <s3>)
    (<s3> ^instance <i4>)
    (<i4> ^3 <i5> ^2 <i6> ^1 <i7>)
    (<p2> ^<i5> <i6>)
    -->
    (<i7> ^object <i3> +)
}
sp {chunkx4*with-attribute*apply*complete*instance*OpNoChange*t10663-1
    :chunk
    (state <s1> ^list <l1>
          ^{ <a1> << action goal predicate failure heuristic >> } <a2>)
    (<l1> ^game <g1>)
    (<a2> ^condition <c1>)
    (<c1> ^rtype set ^type attribute ^negative <n1> ^parameter <p1> ^args <a3>
          ^result <r1> ^name <n2> ^attribute <a4>)
    (<a3> ^1 <i1>)
    (<i1> -^rtype set)
    (<r1> ^set <s2>)
    -->
    (<s2> ^instance <i2> +)
    (<i2> ^2 <n2> + ^3 <a4> + ^1 <i3> +)
}
sp {chunkx4*top-pair*with-type*1param*set*noarg-set1*apply*OpNoChange*t57252-2
    :chunk
    (state <s1> ^list <l1> ^world <w1>
          ^{ <a1> << action goal predicate failure heuristic >> } <a2>)
    (<l1> ^game <g1>)
    (<w1> ^predicates <p1>)
    (<p1> ^predicate <p2>)
    (<p2> ^instance <i1> ^handle <h1>)
    (<i1> ^2 <i2> ^1 <i3>)
    (<a2> ^condition <c1>)
    (<c1> ^negative false ^rtype set ^name <h1> ^type state-pair
          ^parameter <p3> ^args <a3> ^result <r2> ^attribute <a4>)
    (<p3> ^num 2)
    (<a3> ^num 2 ^2 <i4> ^1 <i5> ^2 <i6> ^1 <i7>)
    (<i4> -^rtype set ^result <r4>)
    (<i5> -^rtype set ^result <r3>)
    (<i6> ^result <r1>)
    (<r1> ^set <s2>)
    (<s2> ^instance <i8>)
    (<i8> ^1 <i9>)
   -{ (<s2> ^instance { <i10> > <i8> })
      (<i10> ^1 <i9>)}
    (<r2> ^set <s3>)
    (<s3> ^instance <i11>)
    (<i11> ^2 <i2> ^1 <i12>)
    (<r3> ^set <s4>)
    (<s4> ^instance <i13>)
    (<i13> ^1 <i3>)
    (<r4> ^set <s5>)
    (<s5> ^instance <i14>)
    (<i14> ^1 <i2>)
    -->
    (<i12> ^object <i3> +)
}
sp {chunkx4*top-pair*apply*complete*OpNoChange*t57252-1
    :chunk
    (state <s1> ^list <l1>
          ^{ <a1> << action goal predicate failure heuristic >> } <a2>)
    (<l1> ^game <g1>)
    (<a2> ^condition <c1>)
    (<c1> ^negative false ^rtype set ^type state-pair ^parameter <p1>
          ^args <a3> ^result <r1> ^name <n1> ^attribute <a4>)
    (<p1> ^num 2)
    (<a3> ^num 2 ^2 <i1> ^1 <i2>)
    (<i1> -^rtype set ^result <r2>)
    (<i2> -^rtype set)
    (<r1> ^set <s2>)
    (<r2> ^set <s3>)
    (<s3> ^instance <i3>)
    (<i3> ^1 <i4>)
   -{ (<s3> ^instance { <i5> > <i3> })
      (<i5> ^1 <i4>)}
    -->
    (<s2> ^instance <i6> +)
    (<i6> ^2 <i4> + ^1 <i7> +)
}


### CHUNK issue, ordering, prestore for now
sp {chunkx4*board-between*elaborate*instances*straight*single*OpNoChange*t3343-2
    :chunk
    (state <s1> ^diff-table <d1> ^list <l1>
          ^{ <a1> << action goal predicate failure heuristic >> } <a2>)
    (<d1> ^diff <d2> ^diff <d3>)
    (<d2> ^result 1 ^pair <p1> ^pair <p2>)
    (<d3> ^result 2 ^pair <p3>)
    (<p1> ^num <n1> ^num { <n2> <> <n1> })
    (<p2> ^num <n1> ^num { <n3> <> <n2> <> <n1> })
    (<p3> ^num <n2> ^num <n3>)
    (<l1> ^game <g1>)
    (<a2> ^condition <c1>)
    (<c1> ^function board-between ^rtype single ^name between-exclusive
          ^type function ^args <a3> ^negative <n4> ^parameter <p4>
          ^result <r1>)
    (<a3> ^num 3 ^1 <i1> ^3 <i2> ^2 <i3>)
    (<i1> ^rtype single ^result <r2>)
    (<r1> ^set <s2>)
    (<r2> ^set <s3>)
    (<s3> ^instance <i4>)
    (<i4> ^1 <i5>)
   -{ (<s3> ^instance { <i6> > <i4> })
      (<i6> ^1 <i5>)}
    (<i5> ^predicates <p5>)
    (<i3> ^result <r3>)
    (<r3> ^set <s4>)
    (<s4> ^instance <i7>)
    (<i7> ^1 <i8>)
   -{ (<s4> ^instance { <i9> > <i7> })
      (<i9> ^1 <i8>)}
    (<i8> ^predicates <p6>)
    (<p5> ^{ <a4> << x y >> } <n1> ^<a5> <a6>)
    (<p6> ^<a4> <n2> ^{ <a5> << x y >> <> <a4> } <a6>)
    (<i2> ^result <r4>)
    (<r4> ^set <s5>)
    (<s5> ^instance <i10>)
    (<i10> ^1 <i11>)
   -{ (<s5> ^instance { <i12> > <i10> })
      (<i12> ^1 <i11>)}
    (<i11> ^predicates <p7>)
    (<p7> ^<a4> <n3> ^<a5> <a6>)
    -->
    (<s2> ^instance <i13> +)
    (<i13> ^2 <i8> + ^3 <i11> + ^1 <i5> +)
}

sp {chunkx4*board-between*elaborate*instances*diagonal*single*OpNoChange*t3343-1
    :chunk
    (state <s1> ^diff-table <d1> ^list <l1>
          ^{ <a1> << action goal predicate failure heuristic >> } <a2>)
    (<d1> ^diff <d2> ^diff <d3>)
    (<d2> ^result 1 ^pair <p1> ^pair <p2> ^pair <p3> ^pair <p4>)
    (<d3> ^result 2 ^pair <p5> ^pair <p6>)
    (<p1> ^num <n1> ^num { <n3> <> <n1> })
    (<p3> ^num <n1> ^num { <n4> <> <n3> <> <n1> })
    (<p2> ^num <n2> ^num { <n5> <> <n2> })
    (<p4> ^num <n2> ^num { <n6> <> <n5> <> <n2> })
    (<p5> ^num <n3> ^num <n4>)
    (<p6> ^num <n5> ^num <n6>)
    (<l1> ^game <g1>)
    (<a2> ^condition <c1>)
    (<c1> ^function board-between ^rtype single ^name between-exclusive
          ^type function ^args <a3> ^negative <n7> ^parameter <p7>
          ^result <r1>)
    (<a3> ^num 3 ^1 <i1> ^3 <i2> ^2 <i3>)
    (<i1> ^rtype single ^result <r2>)
    (<r1> ^set <s2>)
    (<r2> ^set <s3>)
    (<s3> ^instance <i4>)
    (<i4> ^1 <i5>)
   -{ (<s3> ^instance { <i6> > <i4> })
      (<i6> ^1 <i5>)}
    (<i5> ^predicates <p8>)
    (<p8> ^y <n2> ^x <n1>)
    (<i3> ^result <r3>)
    (<r3> ^set <s4>)
    (<s4> ^instance <i7>)
    (<i7> ^1 <i8>)
   -{ (<s4> ^instance { <i9> > <i7> })
      (<i9> ^1 <i8>)}
    (<i8> ^predicates <p9>)
    (<p9> ^y <n5> ^x <n3>)
    (<i2> ^result <r4>)
    (<r4> ^set <s5>)
    (<s5> ^instance <i10>)
    (<i10> ^1 <i11>)
   -{ (<s5> ^instance { <i12> > <i10> })
      (<i12> ^1 <i11>)}
    (<i11> ^predicates <p10>)
    (<p10> ^y <n6> ^x <n4>)
    -->
    (<s2> ^instance <i13> +)
    (<i13> ^2 <i8> + ^3 <i11> + ^1 <i5> +)
}

sp {chunkx4*board-between*elaborate*instances*samexy*set*OpNoChange*t3076-2
    :chunk
    (state <s1> ^list <l1>
          ^{ <a1> << action goal predicate failure heuristic >> } <a2>)
    (<l1> ^game <g1>)
    (<a2> ^condition <c1>)
    (<c1> ^function board-between ^rtype set ^name between-exclusive
          ^type function ^args <a3> ^negative <n1> ^parameter <p1>
          ^result <r3>)
    (<a3> ^num 3 ^1 <i1> ^3 <i2> ^2 <i3>)
    (<i1> ^rtype set ^result <r4>)
    (<i3> ^result <r1> ^result <r5>)
    (<r1> ^set <s2>)
    (<s2> ^instance <i4>)
    (<i4> ^1 <i5>)
   -{ (<s2> ^instance { <i6> > <i4> })
      (<i6> ^1 <i5>)}
    (<i2> ^result <r2> ^result <r6>)
    (<r2> ^set <s3>)
    (<s3> ^instance <i7>)
    (<i7> ^1 { <i8> <> <i5> })
   -{ (<s3> ^instance { <i9> > <i7> })
      (<i9> ^1 <i8>)}
    (<r3> ^set <s4>)
    (<s4> ^instance <i10>)
    (<i10> ^3 <i11> ^2 <i12> ^1 <i13>)
    (<i11> ^predicates <p2>)
    (<i12> ^predicates <p3>)
    (<r4> ^set <s5>)
    (<s5> ^instance <i14>)
    (<i14> ^1 <i15>)
    (<r5> ^set <s6>)
    (<s6> ^instance <i16>)
    (<i16> ^1 <i12>)
    (<r6> ^set <s7>)
    (<s7> ^instance <i17>)
    (<i17> ^1 <i11>)
    (<p3> ^{ <a4> << x y >> } <a5> ^{ <a8> << x y >> <> <a4> } <a9>)
    (<p2> ^<a4> <a5> ^<a8> <a10>)
    (<i15> ^<a6> <a7>)
    (<a7> ^predicates <p4>)
    (<p4> ^<a4> <a5>)
   -{ (<p4> ^<a8> { <a11> >= <a10> >= <a9> } ^<a8> <a11>)}
   -{ (<p4> ^<a8> { <a12> <= <a10> <= <a9> } ^<a8> <a12>)}
    -->
    (<i13> ^object <a7> +)
}
sp {chunkx4*board-between*elaborate*instances*samexy*set*inclusive*OpNoChange*t57212-3
    :chunk
    (state <s1> ^list <l1>
          ^{ <a1> << action goal predicate failure heuristic >> } <a2>)
    (<l1> ^game <g1>)
    (<a2> ^condition <c1>)
    (<c1> ^function board-between ^rtype set ^name between-inclusive
          ^type function ^args <a3> ^negative <n1> ^parameter <p1>
          ^result <r3>)
    (<a3> ^num 3 ^1 <i1> ^3 <i2> ^2 <i3>)
    (<i1> ^rtype set ^result <r4>)
    (<i3> ^result <r1> ^result <r5>)
    (<r1> ^set <s2>)
    (<s2> ^instance <i4>)
    (<i4> ^1 <i5>)
   -{ (<s2> ^instance { <i6> > <i4> })
      (<i6> ^1 <i5>)}
    (<i2> ^result <r2> ^result <r6>)
    (<r2> ^set <s3>)
    (<s3> ^instance <i7>)
    (<i7> ^1 { <i8> <> <i5> })
   -{ (<s3> ^instance { <i9> > <i7> })
      (<i9> ^1 <i8>)}
    (<r3> ^set <s4>)
    (<s4> ^instance <i10>)
    (<i10> ^3 <i11> ^2 <i12> ^1 <i13>)
    (<i11> ^predicates <p2>)
    (<i12> ^predicates <p3>)
    (<r4> ^set <s5>)
    (<s5> ^instance <i14>)
    (<i14> ^1 <i15>)
    (<r5> ^set <s6>)
    (<s6> ^instance <i16>)
    (<i16> ^1 <i12>)
    (<r6> ^set <s7>)
    (<s7> ^instance <i17>)
    (<i17> ^1 <i11>)
    (<p3> ^{ <a4> << x y >> } <a5> ^{ <a8> << x y >> <> <a4> } <a9>)
    (<p2> ^<a4> <a5> ^<a8> <a10>)
    (<i15> ^<a6> <a7>)
    (<a7> ^predicates <p4>)
    (<p4> ^<a4> <a5>)
   -{ (<p4> ^<a8> { <a11> > <a10> >= <a9> } ^<a8> <a11>)}
   -{ (<p4> ^<a8> { <a12> < <a10> <= <a9> } ^<a8> <a12>)}
    -->
    (<i13> ^object <a7> +)
}

#seems buggy...
#sp {chunkx4*board-between*elaborate*instances*samexy*set*inclusive*OpNoChange*t57212-2
#    :chunk
#    (state <s1> ^list <l1>
#          ^{ <a1> << action goal predicate failure heuristic >> } <a2>)
#    (<l1> ^game <g1>)
#    (<a2> ^condition <c1>)
#    (<c1> ^function board-between ^rtype set ^name between-inclusive
#          ^type function ^args <a3> ^negative <n1> ^parameter <p1>
#          ^result <r3>)
#    (<a3> ^num 3 ^1 <i1> ^3 <i2> ^2 <i3>)
#    (<i1> ^rtype set ^result <r4>)
#    (<i3> ^result <r1> ^result <r5>)
#    (<r1> ^set <s2>)
#    (<s2> ^instance <i4>)
#    (<i4> ^1 <i5>)
#   -{ (<s2> ^instance { <i6> > <i4> })
#      (<i6> ^1 <i5>)}
#    (<i2> ^result <r2> ^result <r6>)
#    (<r2> ^set <s3>)
#    (<s3> ^instance <i7>)
#    (<i7> ^1 { <i8> <> <i5> })
#   -{ (<s3> ^instance { <i9> > <i7> })
#      (<i9> ^1 <i8>)}
#    (<r3> ^set <s4>)
#    (<s4> ^instance <i10>)
#    (<i10> ^3 <i11> ^2 <i12> ^1 <i13>)
#    (<i11> ^predicates <p2>)
#    (<i12> ^predicates <p3>)
#    (<r4> ^set <s5>)
#    (<s5> ^instance <i14>)
#    (<i14> ^1 <i15>)
#    (<r5> ^set <s6>)
#    (<s6> ^instance <i16>)
#    (<i16> ^1 <i12>)
#    (<r6> ^set <s7>)
#    (<s7> ^instance <i17>)
#    (<i17> ^1 <i11>)
#    (<i15> ^<a4> <a5>)
#    (<a5> ^predicates <p2>)
#    (<p3> ^{ <a6> << x y >> } <a7> ^{ <a8> << x y >> <> <a6> } <a9>)
#    (<p2> ^<a6> <a7> ^<a8> <a10>)
#   -{ (<p2> ^<a8> { <a11> > <a10> >= <a9> } ^<a8> <a11>)}
#   -{ (<p2> ^<a8> { <a12> < <a10> <= <a9> } ^<a8> <a12>)}
#    -->
#    (<i13> ^object <a5> +)
#}

#sp {chunkx4*board-between*elaborate*object*instance*OpNoChange*t57212-1
#    :chunk
#    (state <s1> ^list <l1>
#          ^{ <a1> << action goal predicate failure heuristic >> } <a2>)
#    (<l1> ^game <g1>)
#    (<a2> ^condition <c1>)
#    (<c1> ^function board-between ^rtype set ^type function ^args <a3>
#          ^negative <n1> ^parameter <p1> ^result <r1> ^name <n2>)
#    (<a3> ^num 3 ^3 <i1> ^2 <i2> ^1 <i3>)
#    (<r1> ^set <s2>)
#    (<i2> ^result <r2>)
#    (<r2> ^set <s3>)
#    (<s3> ^instance <i4>)
#    (<i4> ^1 <i5>)
#   -{ (<s3> ^instance { <i6> > <i4> })
#      (<i6> ^1 <i5>)}
#    (<i1> ^result <r3>)
#    (<r3> ^set <s4>)
#    (<s4> ^instance <i7>)
#    (<i7> ^1 { <i8> <> <i5> })
#   -{ (<s4> ^instance { <i9> > <i7> })
#      (<i9> ^1 <i8>)}
#    -->
#    (<s2> ^instance <i10> +)
#    (<i10> ^1 <i11> + ^3 <i8> + ^2 <i5> +)
#}

