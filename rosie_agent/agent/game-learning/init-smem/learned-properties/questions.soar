#contains question related concepts
#and meta brainstorm
#predicates

#how-many X
#where is x
#what-attribute is 

#what 
#match-attribute
#match-color
#matched-on-color
#all-matched count matched = count on-matched

#meta
#what prepositions names extracting
#name-of operator?


#all-covered
#all-empty
#diceroll

#functions
#state-eval

#tested on chess-eval
sp {topstate*elaborate*how-many #number-of
   (state <s> ^name learn-param
            #  ^condition.name adjacent
              ^gtype <gtype>
              ^<gtype>.condition <co>)
   (<co> ^type concept ^attribute predicate ^name how-many)
-->
    (<s> ^predicate <T5> ^gtype predicate)
   
   (<T5> ^nlp-set <nlps> ^formated predicate ^parameter-set <P124> ^potential-args <P125> ^link <co>)
(<P124> ^argnum 2)

  (<nlps> ^nlp <cs2> ^aname how-many)
   
   (<cs2> ^name count ^rtype single ^result.set <res4> ^args <ag2> ^negative false ^parameter <p2z> ^return-type number ^type function ^function soar-count)
   (<p2z> ^1 <p12> ^2 <p22> ^num 2)
   (<p12> ^param-id 1 ^type single)
   (<p22> ^param-id 2 ^type set)
   (<ag2> ^2 <c5> ^num 1)
   
      (<c5> ^args <A57> ^attribute input-arg ^name object ^negative false
                 ^parameter <P225> ^rtype set)
      (<P225> ^1 <P224> ^num 1)
      (<P224> ^param-id 2 ^type set)
}
