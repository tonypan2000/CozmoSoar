#COMPLETE 10

#contains card game related concepts
#predicates
#my-cards in-hand
#my-card
#your-cards in opponent hand
#your-card
#same-suit
#successive-cards
#same-rank
#emptyhand
#opponenthandemtpy


sp {topstate*elaborate*my-cards
   (state <s> ^name learn-param
              ^gtype <gtype>
              ^<gtype>.condition <co>)
   (<co> ^type concept ^attribute predicate ^name my-cards)
-->
    (<s> ^predicate <T5> ^gtype predicate)
   
   (<T5> ^nlp-set <nlps> ^formated predicate ^parameter-set <P124> ^potential-args <P125> ^link <co>)
(<P124> ^argnum 1)


  (<nlps> ^nlp <c7> ^aname my-cards)#^nlp <cs> <cs1>


  (<c7> ^name on ^result.set <res2> ^args <ag5>  ^rtype set ^negative false ^parameter <pzat> ^type state-pair ^attribute prepositions)
   (<pzat> ^1 <pz1> ^num 1)
   (<pz1> ^param-id 1 ^type set)
   (<ag5> ^1 <c4> ^2 <c3> ^num 2)
   
   (<c3> ^result.set <res3> ^name hand ^rtype single ^negative false ^args <ag9> ^parameter.num 0 ^attribute word ^type attribute)
   (<ag9> ^1 <c4> ^num 1)
     
   (<c4> ^args <A57> ^attribute primitive ^name object ^negative false
                 ^parameter <P225> ^result <R94> ^rtype single ^type attribute)
            (<P225> ^num 0)
            (<R94> ^set <S158>)
 
}
sp {topstate*elaborate*my-card
   (state <s> ^name learn-param
            #  ^condition.name adjacent
              ^gtype <gtype>
              ^<gtype>.condition <co>)
   (<co> ^type concept ^attribute predicate ^name my-card)
-->
    (<s> ^predicate <T5> ^gtype predicate)
   
   (<T5> ^nlp-set <nlps> ^formated predicate ^parameter-set <P124> ^potential-args <P125> ^link <co>)
(<P124> ^argnum 1)


  (<nlps> ^nlp <c7> ^aname my-card)#^nlp <cs> <cs1>


  (<c7> ^name on ^result.set <res2> ^args <ag5> ^rtype single ^negative false ^parameter <pzat> ^type state-pair ^attribute prepositions)
   (<pzat> ^1 <pz1> ^num 1)
   (<pz1> ^param-id 1 ^type single)
   (<ag5> ^1 <c4> ^2 <c3> ^num 2)
   
   (<c3> ^result.set <res3> ^name hand ^rtype single ^negative false ^args <ag9> ^parameter.num 0 ^attribute word ^type attribute)
   (<ag9> ^1 <c4> ^num 1)
     
   (<c4> ^args <A57> ^attribute primitive ^name object ^negative false
                 ^parameter <P225> ^result <R94> ^rtype single ^type attribute)
            (<P225> ^num 0)
            (<R94> ^set <S158>)
 
}

sp {topstate*elaborate*your-cards
   (state <s> ^name learn-param
            #  ^condition.name adjacent
              ^gtype <gtype>
              ^<gtype>.condition <co>)
   (<co> ^type concept ^attribute predicate ^name your-cards)
-->
    (<s> ^predicate <T5> ^gtype predicate)
   
   (<T5> ^nlp-set <nlps> ^formated predicate ^parameter-set <P124> ^potential-args <P125> ^link <co>)
(<P124> ^argnum 1)


  (<nlps> ^nlp <c7> ^aname your-cards)#^nlp <cs> <cs1>


  (<c7> ^name on ^result.set <res2> ^args <ag5>  ^rtype set ^negative false ^parameter <pzat> ^type state-pair ^attribute prepositions)
   (<pzat> ^1 <pz1> ^num 1)
   (<pz1> ^param-id 1 ^type set)
   (<ag5> ^1 <c4> ^2 <c3> ^num 2)
   
   (<c3> ^result.set <res3> ^name dealer-hand ^rtype single ^negative false ^args <ag9> ^parameter.num 0 ^attribute word ^type attribute)
   (<ag9> ^1 <c4> ^num 1)
     
   (<c4> ^args <A57> ^attribute primitive ^name object ^negative false
                 ^parameter <P225> ^result <R94> ^rtype single ^type attribute)
            (<P225> ^num 0)
            (<R94> ^set <S158>)
 
}
sp {topstate*elaborate*your-card
   (state <s> ^name learn-param
            #  ^condition.name adjacent
              ^gtype <gtype>
              ^<gtype>.condition <co>)
   (<co> ^type concept ^attribute predicate ^name your-card)
-->
    (<s> ^predicate <T5> ^gtype predicate)
   
   (<T5> ^nlp-set <nlps> ^formated predicate ^parameter-set <P124> ^potential-args <P125> ^link <co>)
(<P124> ^argnum 1)


  (<nlps> ^nlp <c7> ^aname your-card)#^nlp <cs> <cs1>


  (<c7> ^name on ^result.set <res2> ^args <ag5>  ^rtype set ^negative false ^parameter <pzat> ^type state-pair ^attribute prepositions)
   (<pzat> ^1 <pz1> ^num 1)
   (<pz1> ^param-id 1 ^type set)
   (<ag5> ^1 <c4> ^2 <c3> ^num 2)
   
   (<c3> ^result.set <res3> ^name dealer-hand ^rtype single ^negative false ^args <ag9> ^parameter.num 0 ^attribute word ^type attribute)
   (<ag9> ^1 <c4> ^num 1)
     
   (<c4> ^args <A57> ^attribute primitive ^name object ^negative false
                 ^parameter <P225> ^result <R94> ^rtype single ^type attribute)
            (<P225> ^num 0)
            (<R94> ^set <S158>)
 
}

sp {topstate*elaborate*same-suit
   (state <s> ^name learn-param
            #  ^condition.name adjacent
              ^gtype <gtype>
              ^<gtype>.condition <co>)
   (<co> ^type concept ^attribute predicate ^name same-suit -^args.1)
-->
    (<s> ^predicate <T5> ^gtype predicate)
   
   (<T5> ^nlp-set <nlps> ^formated predicate ^parameter-set <P124> ^potential-args <P125> ^link <co>)
(<P124> ^argnum 3)


  (<nlps> ^nlp <cs> <cs2> ^aname same-suit)

   
   (<cs> ^result.set <res> ^name suit ^parameter <param1> ^return-type number ^rtype single ^negative false ^args <ag> ^type attribute-of)#^type function ^function attribute-of)
   (<ag> ^2 <c5> ^num 1)
   (<param1> ^1 <p11> ^2 <p12> ^num 2)
   (<p11> ^param-id 3 ^type single)
   (<p12> ^param-id 1 ^type single)
   
   (<cs2> ^result.set <res3> ^name suit ^parameter <param2> ^return-type number ^rtype single ^negative false ^args <ag2> ^type attribute-of)#^type function ^function attribute-of)
   (<ag2> ^2 <c5> ^num 1)
   (<param2> ^1 <p21> ^2 <p22> ^num 2)
   (<p21> ^param-id 3 ^type single)
   (<p22> ^param-id 2 ^type single)
   
   #(<c1> ^name block ^rtype single ^type attribute ^attribute type)
     
   (<c5> ^args <A57> ^attribute primitive ^name object ^negative false
                 ^parameter <P225> ^result <R94> ^rtype single ^type attribute)
            (<P225> ^num 0)
            (<R94> ^set <S158>)
 
}
#sp {topstate*elaborate*same-rankargs
#   (state <s> ^name learn-param
#            #  ^condition.name adjacent
#              ^gtype <gtype>
#              ^<gtype>.condition <co>)
#   (<co> ^type concept ^attribute predicate ^name same-rank ^args.1)
#-->
#    (<s> ^predicate <T5> ^gtype predicate)
#   
#   (<T5> ^nlp-set <nlps> ^formated predicate ^parameter-set <P124> ^potential-args <P125> ^link <co>)
#(<P124> ^argnum 3)
#
#
#  (<nlps> ^nlp <cs> <cs2> ^aname same-rank)
#
#   
#   (<cs> ^result.set <res> ^name value ^parameter <param1> ^return-type number ^rtype single ^negative false ^args <ag> ^type attribute-of)#^type function ^function attribute-of)
#   (<ag> ^2 <c5> ^num 1)
#   (<param1> ^1 <p11> ^2 <p12> ^num 2)
#   (<p11> ^param-id 3 ^type single)
#   (<p12> ^param-id 1 ^type single)
#   
#   (<cs2> ^result.set <res3> ^name value ^parameter <param2> ^return-type number ^rtype single ^negative false ^args <ag2> ^type attribute-of)#^type function ^function attribute-of)
#   (<ag2> ^2 <c6> ^num 1)
#   (<param2> ^1 <p21> ^2 <p22> ^num 2)
#   (<p21> ^param-id 3 ^type single)
#   (<p22> ^param-id 2 ^type single)
#   
#   #(<c1> ^name block ^rtype single ^type attribute ^attribute type)
#     
#   
#   (<c5> ^args <A57> ^attribute input-arg ^name object ^negative false
#                 ^parameter <P225> ^rtype single)
#   (<P225> ^1 <P224> ^num 1)
#   (<P224> ^param-id 1 ^type single)
#   
#   (<c6> ^args <A576> ^attribute input-arg ^name object ^negative false
#                 ^parameter <P2256> ^rtype single)
#   (<P2256> ^1 <P2246> ^num 1)
#   (<P2246> ^param-id 2 ^type single)
#}

sp {topstate*elaborate*same-suit2
   (state <s> ^name learn-param
            #  ^condition.name adjacent
              ^gtype <gtype>
              ^<gtype>.condition <co>)
   (<co> ^type concept ^attribute predicate ^name same-suit ^args.num 2)
-->
    (<s> ^predicate <T5> ^gtype predicate)
   
   (<T5> ^nlp-set <nlps> ^formated predicate ^parameter-set <P124> ^potential-args <P125> ^link <co>)
(<P124> ^argnum 3)


  (<nlps> ^nlp <cs> <cs2> ^aname same-suit)

   
   (<cs> ^result.set <res> ^name suit ^parameter <param1> ^return-type number ^rtype single ^negative false ^args <ag> ^type attribute-of)#^type function ^function attribute-of)
   (<ag> ^2 <c5> ^num 1)
   (<param1> ^1 <p11> ^2 <p12> ^num 2)
   (<p11> ^param-id 3 ^type single)
   (<p12> ^param-id 1 ^type single)
   
   (<cs2> ^result.set <res3> ^name suit ^parameter <param2> ^return-type number ^rtype single ^negative false ^args <ag2> ^type attribute-of)#^type function ^function attribute-of)
   (<ag2> ^2 <c6> ^num 1)
   (<param2> ^1 <p21> ^2 <p22> ^num 2)
   (<p21> ^param-id 3 ^type single)
   (<p22> ^param-id 2 ^type single)
   
   #(<c1> ^name block ^rtype single ^type attribute ^attribute type)
     
   
   (<c5> ^args <A57> ^attribute input-arg ^name object ^negative false
                 ^parameter <P225> ^rtype single)
   (<P225> ^1 <P224> ^num 1)
   (<P224> ^param-id 1 ^type single)
   
   (<c6> ^args <A576> ^attribute input-arg ^name object ^negative false
                 ^parameter <P2256> ^rtype single)
   (<P2256> ^1 <P2246> ^num 1)
   (<P2246> ^param-id 2 ^type single)
}


sp {topstate*elaborate*successive-cards
   (state <s> ^name learn-param
            #  ^condition.name adjacent
              ^gtype <gtype>
              ^<gtype>.condition <co>)
   (<co> ^type concept ^attribute predicate ^name successive-cards)
-->
    (<s> ^predicate <T5> ^gtype predicate)
   
   (<T5> ^nlp-set <nlps> ^formated predicate ^parameter-set <P124> ^potential-args <P125> ^link <co>)
(<P124> ^argnum 4)


  (<nlps> ^nlp <c6s> ^aname successive-cards)

   
   (<c8> ^name value ^args <ag8> ^parameter <p8> ^negative false ^result.set <rset> ^rtype single ^return-type number ^type attribute-of)#^type function ^function soar-value)
   (<p8> ^1 <p18> ^2 <p182> ^num 2)
   (<p18> ^param-id 4 ^type single)
   (<p182> ^param-id 2 ^type single)
   (<ag8> ^2 <c5> ^num 1)
   
   (<c6> ^name value ^args <ag11> ^parameter <p3z7> ^negative false ^result.set <rset1> ^rtype single  ^return-type number ^type attribute-of)#function ^function soar-value)
   (<p3z7> ^1 <p11> ^2 <p112> ^num 2)
   (<p11> ^param-id 3 ^type single)
   (<p112> ^param-id 1 ^type single)
   (<ag11> ^2 <c5> ^num 1)
   
   
   (<c6s> ^name one-higher ^args <agg5> ^parameter <pg3> ^negative false ^result.set <rset2> ^rtype single ^return-type number ^type state-pair ^attribute successive)#^type function ^function card-one-higher)
   (<pg3> ^1 <p1cg> ^2 <p2cg> ^num 2)
   (<p1cg> ^param-id 4 ^type single)
   (<p2cg> ^param-id 3 ^type single)
   (<agg5> ^1 <c8> ^2 <c6> ^num 2)
   
   #(<c1> ^name block ^rtype single ^type attribute ^attribute type)
     
   (<c5> ^args <A57> ^attribute primitive ^name object ^negative false
                 ^parameter <P225> ^result <R94> ^rtype single ^type attribute)
            (<P225> ^num 0)
            (<R94> ^set <S158>)
 
}

#singles versions
#tested slow/duplicates                                                        
sp {topstate*elaborate*same-rank3
   (state <s> ^name learn-param
            #  ^condition.name adjacent
              ^gtype <gtype>
              ^<gtype>.condition <co>)
   (<co> ^type concept ^attribute predicate ^name same-rank ^args.num 3)
-->
    (<s> ^predicate <T5> ^gtype predicate)
   
   (<T5> ^nlp-set <nlps> ^formated predicate ^parameter-set <P124> ^potential-args <P125> ^link <co>)
(<P124> ^argnum 4)


  (<nlps> ^nlp <cs> <cs2> <cs3> ^aname same-rank)

   
   (<cs> ^result.set <res> ^name value ^parameter <param1> ^return-type number ^rtype single ^negative false ^args <ag> ^type attribute-of)#^type function ^function attribute-of)
   (<ag> ^2 <c5> ^num 1)
   (<param1> ^1 <p11> ^2 <p12> ^num 2)
   (<p11> ^param-id 4 ^type single)
   (<p12> ^param-id 1 ^type single)
   
   (<cs2> ^result.set <res3> ^name value ^parameter <param2> ^return-type number ^rtype single ^negative false ^args <ag2> ^type attribute-of)#^type function ^function attribute-of)
   (<ag2> ^2 <c6> ^num 1)
   (<param2> ^1 <p21> ^2 <p22> ^num 2)
   (<p21> ^param-id 4 ^type single)
   (<p22> ^param-id 2 ^type single)
   
   (<cs3> ^result.set <res33> ^name value ^parameter <param23> ^return-type number ^rtype single ^negative false ^args <ag23> ^type attribute-of)#^type function ^function attribute-of)
   (<ag23> ^2 <c7> ^num 1)
   (<param23> ^1 <p213> ^2 <p223> ^num 2)
   (<p213> ^param-id 4 ^type single)
   (<p223> ^param-id 3 ^type single)
   
   (<c5> ^args <A57> ^attribute input-arg ^name object ^negative false
                 ^parameter <P225> ^rtype single)
   (<P225> ^1 <P224> ^num 1)
   (<P224> ^param-id 1 ^type single)
   
   (<c6> ^args <A576> ^attribute input-arg ^name object ^negative false
                 ^parameter <P2256> ^rtype single)
   (<P2256> ^1 <P2246> ^num 1)
   (<P2246> ^param-id 2 ^type single)
   
   (<c7> ^args <A5767> ^attribute input-arg ^name object ^negative false
                 ^parameter <P22567> ^rtype single)
   (<P22567> ^1 <P22467> ^num 1)
   (<P22467> ^param-id 3 ^type single)
}

sp {topstate*elaborate*same-rank
   (state <s> ^name learn-param
            #  ^condition.name adjacent
              ^gtype <gtype>
              ^<gtype>.condition <co>)
   (<co> ^type concept ^attribute predicate ^name same-rank ^args.num 2)
-->
    (<s> ^predicate <T5> ^gtype predicate)
   
   (<T5> ^nlp-set <nlps> ^formated predicate ^parameter-set <P124> ^potential-args <P125> ^link <co>)
(<P124> ^argnum 3)


  (<nlps> ^nlp <cs> <cs2> ^aname same-rank)

   
   (<cs> ^result.set <res> ^name value ^parameter <param1> ^return-type number ^rtype single ^negative false ^args <ag> ^type attribute-of)#^type function ^function attribute-of)
   (<ag> ^2 <c5> ^num 1)
   (<param1> ^1 <p11> ^2 <p12> ^num 2)
   (<p11> ^param-id 3 ^type single)
   (<p12> ^param-id 1 ^type single)
   
   (<cs2> ^result.set <res3> ^name value ^parameter <param2> ^return-type number ^rtype single ^negative false ^args <ag2> ^type attribute-of)#^type function ^function attribute-of)
   (<ag2> ^2 <c6> ^num 1)
   (<param2> ^1 <p21> ^2 <p22> ^num 2)
   (<p21> ^param-id 3 ^type single)
   (<p22> ^param-id 2 ^type single)
   
   (<c5> ^args <A57> ^attribute input-arg ^name object ^negative false
                 ^parameter <P225> ^rtype single)
   (<P225> ^1 <P224> ^num 1)
   (<P224> ^param-id 1 ^type single)
   
   (<c6> ^args <A576> ^attribute input-arg ^name object ^negative false
                 ^parameter <P2256> ^rtype single)
   (<P2256> ^1 <P2246> ^num 1)
   (<P2246> ^param-id 2 ^type single)
   #(<c1> ^name block ^rtype single ^type attribute ^attribute type)
     
#   (<c5> ^args <A57> ^attribute primitive ^name object ^negative false
#                 ^parameter <P225> ^result <R94> ^rtype single ^type attribute)
#            (<P225> ^num 0)
#            (<R94> ^set <S158>)
 
}

sp {topstate*elaborate*empty-hand
   (state <s> ^name learn-param
            #  ^condition.name adjacent
              ^gtype <gtype>
              ^<gtype>.condition <co>)
   (<co> ^type concept ^attribute predicate ^name empty-hand)
-->
    (<s> ^predicate <T5> ^gtype predicate)
   
   (<T5> ^nlp-set <nlps> ^formated predicate ^parameter-set <P124> ^potential-args <P125> ^link <co>)
(<P124> ^argnum 1)


  (<nlps> ^nlp <c7> ^aname empty-hand)#^nlp <cs> <cs1>


  (<c7> ^name below ^result.set <res2> ^args <ag5>  ^rtype single ^negative true ^parameter <pzat> ^type state-pair ^attribute prepositions)
   (<pzat> ^1 <pz1> ^num 1)
   (<pz1> ^param-id 1 ^type single)
   (<ag5> ^1 <c3> ^2 <c4> ^num 2)
   
   (<c3> ^result.set <res3> ^name hand ^rtype single ^negative false ^args <ag9> ^parameter.num 0 ^attribute word ^type attribute)
   (<ag9> ^1 <c4> ^num 1)
     
   (<c4> ^args <A57> ^attribute primitive ^name object ^negative false
                 ^parameter <P225> ^result <R94> ^rtype single ^type attribute)
            (<P225> ^num 0)
            (<R94> ^set <S158>)
 
}

sp {topstate*elaborate*opponent-empty-hand
   (state <s> ^name learn-param
            #  ^condition.name adjacent
              ^gtype <gtype>
              ^<gtype>.condition <co>)
   (<co> ^type concept ^attribute predicate ^name opponent-empty-hand)
-->
    (<s> ^predicate <T5> ^gtype predicate)
   
   (<T5> ^nlp-set <nlps> ^formated predicate ^parameter-set <P124> ^potential-args <P125> ^link <co>)
(<P124> ^argnum 1)


  (<nlps> ^nlp <c7> ^aname opponent-empty-hand)#^nlp <cs> <cs1>


  (<c7> ^name below ^result.set <res2> ^args <ag5>  ^rtype single ^negative true ^parameter <pzat> ^type state-pair ^attribute prepositions)
   (<pzat> ^1 <pz1> ^num 1)
   (<pz1> ^param-id 1 ^type single)
   (<ag5> ^1 <c3> ^2 <c4> ^num 2)
   
   (<c3> ^result.set <res3> ^name dealer-hand ^rtype single ^negative false ^args <ag9> ^parameter.num 0 ^attribute word ^type attribute)
   (<ag9> ^1 <c4> ^num 1)
     
   (<c4> ^args <A57> ^attribute primitive ^name object ^negative false
                 ^parameter <P225> ^result <R94> ^rtype single ^type attribute)
            (<P225> ^num 0)
            (<R94> ^set <S158>)
 
}
#numberofsuitinhand
#suit string input arg
sp {topstate*elaborate*number-of-suits #in-hand
   (state <s> ^name learn-param
            #  ^condition.name adjacent
              ^gtype <gtype>
              ^<gtype>.condition <co>)
   (<co> ^type concept ^attribute predicate ^name number-of-suits)
-->
    (<s> ^predicate <T5> ^gtype predicate)
   
   (<T5> ^nlp-set <nlps> ^formated predicate ^parameter-set <P124> ^potential-args <P125> ^link <co>)
(<P124> ^argnum 3)


  (<nlps> ^nlp <cs3> ^aname number-of-suits)

   
   
   (<cs3> ^name count ^rtype single ^result.set <res4> ^args <ag3> ^negative false ^parameter <p2z> ^return-type number ^type function ^function soar-count)
   (<p2z> ^1 <p12> ^2 <p223> ^num 2)
   (<p12> ^param-id 1 ^type single)
   (<p223> ^param-id 3 ^type set)
   (<ag3> ^2 <cs2> ^num 1)
   
   (<cs2> ^result.set <res3> ^name suitz ^parameter <param2> ^rtype set ^negative false ^args <ag2> ^type function ^function with-attribute)
   (<ag2> ^1 <cs> ^2 <c5> ^3 <c5z> ^num 3)
   (<param2> ^1 <p21> ^2 <p22> ^num 2)
   (<p21> ^param-id 3 ^type set)
   (<p22> ^param-id 2 ^type single)
   
   (<cs> ^result.set <res> ^name my-card ^parameter.num 0 ^rtype single ^negative false ^args <ag> ^type concept ^attribute predicate)#^type function ^function attribute-of)
   
   (<c5z> ^name number ^args <ag11zz> ^parameter.num 0 ^negative false ^type attribute ^attribute primitive ^rtype single ^result.set.pair <pa22z> ^return-type number)
   (<pa22z> ^1 suit)
   
   (<c5> ^args <A57> ^attribute input-arg ^name number ^negative false ^return-type number
                 ^parameter <P225> ^rtype single)
   (<P225> ^1 <P224> ^num 1)
   (<P224> ^param-id 2 ^type single)
 
}

#only handles single input
sp {topstate*elaborate*number-of-same-suits #in-hand
   (state <s> ^name learn-param
            #  ^condition.name adjacent
              ^gtype <gtype>
              ^<gtype>.condition <co>)
   (<co> ^type concept ^attribute predicate ^name number-of-same-suits)
-->
    (<s> ^predicate <T5> ^gtype predicate)
   
   (<T5> ^nlp-set <nlps> ^formated predicate ^parameter-set <P124> ^potential-args <P125> ^link <co>)
(<P124> ^argnum 2)


  (<nlps> ^nlp <cs3> ^aname number-of-same-suits)

   
   
   (<cs3> ^name count ^rtype single ^result.set <res4> ^args <ag3> ^negative false ^parameter <p2z> ^return-type number ^type function ^function soar-count)
   (<p2z> ^1 <p12> ^num 1)#^2 <p22> ^num 2)
   (<p12> ^param-id 1 ^type single)
  # (<p22> ^param-id 3 ^type single)
   (<ag3> ^2 <cs2> ^num 1)
   
   #needs to be set
   (<cs2> ^result.set <res3> ^name same-suit ^parameter.num 0 ^rtype single ^negative false ^args <ag2> ^type concept ^attribute predicate)
   (<ag2> ^1 <cs> ^2 <c5> ^num 2)
#   (<param2> ^1 <p21> ^2 <p22> ^num 2)
#   (<p21> ^param-id 3 ^type single)
#   (<p22> ^param-id 2 ^type single)
   
   (<cs> ^result.set <res> ^name my-card ^parameter.num 0 ^rtype single ^negative false ^args <ag> ^type concept ^attribute predicate)#^type function ^function attribute-of)
   
   
   (<c5> ^args <A57> ^attribute input-arg ^name object ^negative false
                 ^parameter <P225> ^rtype single)
   (<P225> ^1 <P224> ^num 1)
   (<P224> ^param-id 2 ^type single)
 
}

#more-suits(in-hand)

sp {topstate*elaborate*more-suits
   (state <s> ^name learn-param
            #  ^condition.name adjacent
              ^gtype <gtype>
              ^<gtype>.condition <co>)
   (<co> ^type concept ^attribute predicate ^name more-suits)
-->
    (<s> ^predicate <T5> ^gtype predicate)
   
   (<T5> ^nlp-set <nlps> ^formated predicate ^parameter-set <P124> ^potential-args <P125> ^link <co>)
(<P124> ^argnum 6)


  (<nlps> ^nlp <c8> ^aname more-suits)

   (<c8> ^name more ^rtype single ^result.set <res2> ^args <ag8> ^parameter <p8> ^negative false ^return-type number ^type function ^function soar-greater)# ^return-type number)
   (<p8> ^1 <p18> ^2 <p182> ^num 2)
   (<p18> ^param-id 5 ^type single)
   (<p182> ^param-id 6 ^type single)
   (<ag8> ^1 <cs1> ^2 <cs12> ^num 2)
  	
  (<cs1> ^name number-of-suits ^parameter <param11> ^rtype single ^negative false ^args <ag1> ^type concept ^attribute predicate ^result.set <rset1231>)
   (<ag1> ^2 <cs> ^num 1)
   (<param11> ^1 <p111> ^2 <p121> ^num 2)
   (<p111> ^param-id 5 ^type single)
   (<p121> ^param-id 3 ^type single)
   
   (<cs12> ^name number-of-suits ^parameter <param112> ^rtype single ^negative false ^args <ag12> ^type concept ^attribute predicate ^result.set <rset12312>)
   (<ag12> ^2 <cs2> ^num 1)
   (<param112> ^1 <p1112> ^2 <p1212> ^num 2)
   (<p1112> ^param-id 6 ^type single)
   (<p1212> ^param-id 4 ^type single)
  
  
   (<cs> ^result.set <res> ^name suit ^parameter <param1> ^return-type number ^rtype single ^negative false ^args <ag> ^type attribute-of)#^type function ^function attribute-of)
   (<ag> ^2 <c5> ^num 1)
   (<param1> ^1 <p11> ^2 <p12> ^num 2)
   (<p11> ^param-id 3 ^type single)
   (<p12> ^param-id 1 ^type single)
   
   (<cs2> ^result.set <res3> ^name suit ^parameter <param2> ^return-type number ^rtype single ^negative false ^args <ag2> ^type attribute-of)#^type function ^function attribute-of)
   (<ag2> ^2 <c6> ^num 1)
   (<param2> ^1 <p21> ^2 <p22> ^num 2)
   (<p21> ^param-id 4 ^type single)
   (<p22> ^param-id 2 ^type single)
   
   #(<c1> ^name block ^rtype single ^type attribute ^attribute type)
     
   
   (<c5> ^args <A57> ^attribute input-arg ^name object ^negative false
                 ^parameter <P225> ^rtype single)
   (<P225> ^1 <P224> ^num 1)
   (<P224> ^param-id 1 ^type single)
   
   (<c6> ^args <A576> ^attribute input-arg ^name object ^negative false
                 ^parameter <P2256> ^rtype single)
   (<P2256> ^1 <P2246> ^num 1)
   (<P2246> ^param-id 2 ^type single)
}


#option 2
#count of same suit from hand with my card and there card
sp {topstate*elaborate*more-same-suits
   (state <s> ^name learn-param
            #  ^condition.name adjacent
              ^gtype <gtype>
              ^<gtype>.condition <co>)
   (<co> ^type concept ^attribute predicate ^name more-same-suits)
-->
    (<s> ^predicate <T5> ^gtype predicate)
   
   (<T5> ^nlp-set <nlps> ^formated predicate ^parameter-set <P124> ^potential-args <P125> ^link <co>)
(<P124> ^argnum 4)


  (<nlps> ^nlp <c8> ^aname more-same-suits)

   (<c8> ^name more ^rtype single ^result.set <res2> ^args <ag8> ^parameter <p8> ^negative false ^return-type number ^type function ^function soar-greater)# ^return-type number)
   (<p8> ^1 <p18> ^2 <p182> ^num 2)
   (<p18> ^param-id 3 ^type single)
   (<p182> ^param-id 4 ^type single)
   (<ag8> ^1 <cs1> ^2 <cs12> ^num 2)
  	
  (<cs1> ^name number-of-same-suits ^parameter <param11> ^rtype single ^negative false ^args <ag1> ^type concept ^attribute predicate ^result.set <rset1231>)
   (<ag1> ^2 <c5> ^num 1)
   (<param11> ^1 <p111> ^2 <p121> ^num 2)
   (<p111> ^param-id 3 ^type single)
   (<p121> ^param-id 1 ^type single)
   
   (<cs12> ^name number-of-same-suits ^parameter <param112> ^rtype single ^negative false ^args <ag12> ^type concept ^attribute predicate ^result.set <rset12312>)
   (<ag12> ^2 <c6> ^num 1)
   (<param112> ^1 <p1112> ^2 <p1212> ^num 2)
   (<p1112> ^param-id 4 ^type single)
   (<p1212> ^param-id 2 ^type single)
   
   #(<c1> ^name block ^rtype single ^type attribute ^attribute type)
     
   
   (<c5> ^args <A57> ^attribute input-arg ^name object ^negative false
                 ^parameter <P225> ^rtype single)
   (<P225> ^1 <P224> ^num 1)
   (<P224> ^param-id 1 ^type single)
   
   (<c6> ^args <A576> ^attribute input-arg ^name object ^negative false
                 ^parameter <P2256> ^rtype single)
   (<P2256> ^1 <P2246> ^num 1)
   (<P2246> ^param-id 2 ^type single)
}




#TODO test
sp {topstate*elaborate*set-same-rank#input-number value
   (state <s> ^name learn-param
            #  ^condition.name adjacent
              ^gtype <gtype>
              ^<gtype>.condition <co>)
   (<co> ^type concept ^attribute predicate ^name set-same-rank)
-->
    (<s> ^predicate <T5> ^gtype predicate)
   
   (<T5> ^nlp-set <nlps> ^formated predicate ^parameter-set <P124> ^potential-args <P125> ^link <co>)
(<P124> ^argnum 2)


  (<nlps> ^nlp <cs2> ^aname set-same-rank)

   
   (<cs2> ^result.set <res3> ^name valuez ^parameter <param2> ^rtype set ^negative false ^args <ag2> ^type function ^function with-attribute)
   (<ag2> ^1 <cs> ^2 <c5> ^3 <c5z> ^num 3)
   (<param2> ^1 <p21> ^2 <p22> ^num 2)
   (<p21> ^param-id 1 ^type set)
   (<p22> ^param-id 2 ^type single)
   
   (<cs> ^result.set <res> ^name my-card ^parameter.num 0 ^rtype single ^negative false ^args <ag> ^type concept ^attribute predicate)#^type function ^function attribute-of)
   
   (<c5z> ^name number ^args <ag11zz> ^parameter.num 0 ^negative false ^type attribute ^attribute primitive ^rtype single ^result.set.pair <pa22z> ^return-type number)
   (<pa22z> ^1 value)
   
   (<c5> ^args <A57> ^attribute input-arg ^name number ^negative false ^return-type number
                 ^parameter <P225> ^rtype single)
   (<P225> ^1 <P224> ^num 1)
   (<P224> ^param-id 2 ^type single)
 
}

sp {topstate*elaborate*lower-card
   (state <s> ^name learn-param
            #  ^condition.name adjacent
              ^gtype <gtype>
              ^<gtype>.condition <co>)
   (<co> ^type concept ^attribute predicate ^name lower-card ^args.num 2)
-->
    (<s> ^predicate <T5> ^gtype predicate)
   
   (<T5> ^nlp-set <nlps> ^formated predicate ^parameter-set <P124> ^potential-args <P125> ^link <co>)
(<P124> ^argnum 4)


  (<nlps> ^nlp <c5a> ^aname lower-card)
  
  (<c5a> ^args <aga> ^function soar-less ^name less ^negative false
                 ^parameter <param1a> ^result <R92a> ^rtype single ^type function ^return-type number)
   (<aga> ^1 <cs> ^2 <cs2> ^num 2)
   (<param1a> ^1 <p11a> ^2 <p12a> ^num 2)
   (<p11a> ^param-id 3 ^type single)
   (<p12a> ^param-id 4 ^type single)
   (<R92a> ^set <S152>)

   
   (<cs> ^result.set <res> ^name value ^parameter <param1> ^return-type number ^rtype single ^negative false ^args <ag> ^type attribute-of)#^type function ^function attribute-of)
   (<ag> ^2 <c5> ^num 1)
   (<param1> ^1 <p11> ^2 <p12> ^num 2)
   (<p11> ^param-id 3 ^type single)
   (<p12> ^param-id 1 ^type single)
   
   (<cs2> ^result.set <res3> ^name value ^parameter <param2> ^return-type number ^rtype single ^negative false ^args <ag2> ^type attribute-of)#^type function ^function attribute-of)
   (<ag2> ^2 <c6> ^num 1)
   (<param2> ^1 <p21> ^2 <p22> ^num 2)
   (<p21> ^param-id 4 ^type single)
   (<p22> ^param-id 2 ^type single)
   
   #(<c1> ^name block ^rtype single ^type attribute ^attribute type)
     
   
   (<c5> ^args <A57> ^attribute input-arg ^name object ^negative false
                 ^parameter <P225> ^rtype single)
   (<P225> ^1 <P224> ^num 1)
   (<P224> ^param-id 1 ^type single)
   
   (<c6> ^args <A576> ^attribute input-arg ^name object ^negative false
                 ^parameter <P2256> ^rtype single)
   (<P2256> ^1 <P2246> ^num 1)
   (<P2246> ^param-id 2 ^type single)
}

