sp {topstate*elaborate*settest
   (state <s> ^superstate nil)
-->
   (<s> ^current-game <cg> 
        ^prepositions <F7>
        ^heuristics <heu>
        ^integers <int>
        ^object <o1> ^object <o2>
         ^object <o3> ^object <o4>
         ^object <o1b> 
         ^object <o2b>
#         ^object <o3b> ^object <o4b>
#         ^object <o5> ^object <o6> 
         ^object <o7>
         ^object <o8> ^object <o9>
         ^object <o10> ^object <o11>
#         ^object <o12> ^object <o13>
#         ^object <o14> 
         ^object <o15>
         ^object <o16>
        )
    (<heu> ^1 <heu1>) #do to opponent or not?
 (<heu> ^preference <pref> ^test <t>)
 (<pref> ^1 <pref1> ^2 <pref2> ^num 2)
 (<pref1> ^name stack-block)#^parameter, ^attribute
 (<pref2> ^name stack-block)
 (<t> ^1 <t1> ^2 <t2> ^function soar-less)
 (<t1> ^args.4 holder)
 (<t2> ^args.4 holder)
 
   (<int> ^number 1 2 3 4 5 6 7 8 9 10 11)# 12 13 14 15 16 17 28 19 20)
   (<cg> ^game <g> ^name liars-test ^action <T5> ^multiplayer false ^learning <lll>)
    (<lll> ^action-number 1 ^verb-num 1 ^type verb)# ^action-name <aname>)
   (<g> ^actions <a> ^name liars-test)
   (<a> ^1 <tcn>)
   
 (<F7> ^prep <p200>)
   (<p200> ^name below ^pair <p31>
         ^pair <p32> ^pair <p33>
         ^pair <p34> ^pair <p35>)
   (<p31> ^1 1 ^2 6)
   (<p32> ^1 2 ^2 6)
   (<p33> ^1 3 ^2 6)
   (<p34> ^1 4 ^2 6)
   (<p35> ^1 5 ^2 6)
   
 
   (<o1> ^id 1 ^category block ^word dice ^value 1)
   (<o2> ^id 2 ^category block ^word dice ^value 2)
   (<o3> ^id 3 ^category block ^word dice ^value 3)
   (<o4> ^id 4 ^category block ^word dice ^value 4)
   (<o1b> ^id 5 ^category block ^word dice ^value 5)
   (<o2b> ^id 6 ^category block ^word cup)
#   (<o3b> ^id 7 ^category block ^word red ^value 7)
#   (<o4b> ^id 8 ^category block ^word red ^value 8)
#   (<o5> ^id 9  ^category block ^word red ^value 9)
#   (<o6> ^id 10 ^category block ^word red ^value 10)
   (<o7> ^id 11 ^category block ^word dice ^value 1)
   (<o8> ^id 12 ^category block ^word dice ^value 2)
   (<o9> ^id 13 ^category block ^word dice ^value 3)
   (<o10> ^id 14 ^category block ^word dice ^value 4)
   (<o11> ^id 15 ^category block ^word dice ^value 5)
#   (<o12> ^id 16 ^category block ^word black ^value 6)
#   (<o13> ^id 17 ^category block ^word black ^value 7)
#   (<o14> ^id 18 ^category block ^word black ^value 8)
   (<o15> ^id 19 ^category block ^word red ^value 3) #num-bid
   (<o16> ^id 20 ^category block ^word black ^value 5) #face-bid



(<T5> ^nlp-set <nlps>)
(<nlps> ^nlp <c7> <c6> 
           ^aname stack-block) #^nlp <cs> 
 
   (<cs> ^name value ^return-type number ^args <ag> ^parameter <p3z> ^return-type number)
   (<p3z> ^1 <p1>)
   (<p1> ^param-id 1 ^type single)
   (<ag> ^2 <c1>)
   
   (<c1> ^name red ^args <ag2> ^type attribute)
   (<ag2> ^1 <c4>)
   (<c4> ^name block ^rtype single)
   
   
   
   (<c6> ^name integer-range ^args <ag11> ^parameter <p3z7> ^return-type number)
   (<p3z7> ^2 <p11> ^3 <p11b> ^1 <p11c>)
   (<p11> ^param-id 1 ^type single)
   (<p11b> ^param-id 3 ^type single)
   (<p11c> ^param-id 4 ^type single)
   (<ag11> ^2 <cs> ^3 <crs> ^1 <crs2>)
   
   (<crs> ^name count ^return-type number ^args <ag34> ^parameter <ppp>)
   (<ppp> ^1 <p21>)
   (<p21> ^param-id 3 ^type single)
   (<ag34> ^2 <c6a>)
   
   (<crs2> ^name integer ^args <ag33zz> ^result.set.pair <resss> ^rtype single ^return-type number)
   
   (<c6a> ^name dice ^args <ag33> ^type attribute ^rtype set)
   (<ag33> ^1 <c4>)
   #(<c555> ^name block ^rtype set)
   
   (<c7> ^name value ^return-type number ^args <ag5> ^parameter <p37> ^return-type number)
   (<p37> ^1 <p12>)
   (<p12> ^param-id 2 ^type single)
   (<ag5> ^2 <c3>)
   (<c3> ^name black ^type attribute ^args <ag9>)
   (<ag9> ^1 <c4>)

   
}

sp {chunk-multi*justification-375*t68-1
    :chunk
    (state <s1> ^gtype action ^integers <i1> ^list <l1> ^action <a1>)
    (<i1> ^number <n2>)
    (<l1> ^game <g1>)
    (<a1> ^condition <c1>)
    (<c1> ^negative false ^name integer ^args <a2> ^parameter <p1>
          ^result <r1>)
    (<r1> ^set <s2>)
    -->
    (<s2> ^pair <p2> +)
    (<p2> ^1 <n2> +)
}
sp {chunk-multi*justification-561*t99-1
    :chunk
    (state <s1> ^gtype action ^list <l1> ^action <a1>)
    (<l1> ^game <g1>)
    (<a1> ^condition <c1>)
    (<c1> ^negative false ^name integer-range ^args <a2> ^parameter <p1>
          ^result <r4>)
    (<a2> ^num 3 ^3 <*1> ^2 <*2> ^1 <*3>)
    (<*3> ^result <r1>)
    (<r1> ^set <s2>)
    (<s2> ^pair <p2>)
    (<p2> ^1 <v7>)
    (<*1> ^result <r2>)
    (<r2> ^set <s3>)
    (<s3> ^pair <p3>)
    (<p3> ^1 {<v10> >= <v7>})
    (<*2> ^result <r3>)
    (<r3> ^set <s4>)
    (<s4> ^pair <p4>)
    (<p4> ^1 {<v3> < <v7>})
    (<r4> ^set <s5>)
    -->
    (<s5> ^pair <p5> +)
    (<p5> ^1 <v7> + ^3 <v10> + ^2 <v3> +)
}

sp {chunk-multi*justification-552*t91-1
    :chunk
    (state <s1> ^gtype action ^list <l1> ^action <a1>)
    (<l1> ^game <g1>)
    (<a1> ^condition <c1>)
    (<c1> ^negative false ^name count ^args <a2> ^parameter <p1> ^result <r1>)
    (<a2> ^num 1 ^2 <*1>)
    (<p1> ^num 1)
    (<*1> ^rtype set ^result <r2>)
    (<r1> ^set <s2>)
    (<r2> ^set <s3>)
    (<s3> ^pair <p2>)
    (<p2> ^1 <*2>)
  -{(state <s1>)
     (<*2> -^<something>)}
    -->
    (<s2> ^pair <p3> +)
    (<p3> ^1 (size <*2>) +)
}

#needs this variable rule
#sp {chunk-multi*justification-1382*t300-1
#    :chunk
#    (state <s1> ^gtype action ^list <l1> ^action <a1>)
#    (<l1> ^game <g1>)
#    (<a1> ^condition <c1>)
#    (<c1> ^negative false ^name integer-range ^args <a2> ^parameter <p1>
#          ^result <r7>)
#    (<a2> ^num 3 ^3 <*1> ^2 <*2> ^1 <*3>)
#    (<*1> ^parameter <p2> ^result <r4>)
#    (<*2> ^parameter <p3> ^result <r5>)
#    (<*3> ^parameter <p4> ^result <r6>)
#    (<p2> ^result <r1>)
#    (<r1> ^link <l2>)
#    (<l2> ^link <l3>)
#    (<l3> ^set <s2>)
#    (<s2> ^item <i1>)
#    (<i1> ^number holder)
#    (<p3> ^result <r2>)
#    (<r2> ^link <l4>)
#    (<l4> ^link <l5>)
#    (<l5> ^set <s3>)
#    (<s3> ^link <l6>)
#    (<l6> ^number holder)
#    (<p4> ^result <r3>)
#    (<r3> ^link <l7>)
#    (<l7> ^link <l8>)
#    (<l8> ^set <s4>)
#    (<s4> ^link <l9>)
#    (<l9> ^number holder)
#    (<r4> ^set <s5>)
#    (<s5> ^item <i2>)
#    (<i2> ^number {<nn7> > <nn3>})
#    (<r5> ^set <s6>)
#    (<s6> ^link <l10>)
#    (<l10> ^number {<nn10> >= <nn7>})
#    (<r6> ^set <s7>)
#    (<s7> ^link <l11>)
#    (<l11> ^number <nn3>)
#    (<r7> ^set <s8>)
#    -->
#    (<s8> ^pair <p5> +)
#    (<p5> ^3 <c2> + ^2 <nn10> + ^1 <nn3> +)
#    (<c2> ^number <nn7> +)
#}
