#snakes-and-ladders
sp {topstate*elaborate*snakes-and-ladders
   (state <s> ^superstate nil)
-->
   (<s> ^current-game <cg> 
        ^prepositions <F7> 
        ^object <o1> ^object <o2>
         ^object <o3> ^object <o4>
         ^object <o5> ^object <o6>
         ^object <o7> ^object <o8>
         ^object <o9> ^object <o10>
         ^object <o11> ^object <o12>
         ^object <o13> ^object <o14>
         ^object <o15> ^object <o16>
         ^object <o17> ^object <o18>
         ^object <o19> ^object <o20>
         ^object <o21> ^object <o22>
         ^object <o23> ^object <o24>
         ^object <o25> ^object <o26>
         ^object <o27> ^object <o28>
        )
   (<cg> ^game <g> ^name snakes-and-ladders ^action <T5> ^multiplayer false ^learning <lll>)
    (<lll> ^action-number 1 ^verb-num 1 ^type verb)# ^action-name <aname>)
   (<g> ^actions <a> ^name snakes-and-ladders)
   (<a> ^1 <tcn>)
   
(<F7> ^prep <p100>
        ^prep <p200>
        ^prep <p300>
        ^prep <p400>)
   (<p100> ^name above ^pair <p21>)
   (<p21> ^1 23 ^2 14)
   
   (<p200> ^name under ^pair <p31>)
   (<p31> ^1 13 ^2 25)
   
   (<p300> ^name below ^pair <p221>
         ^pair <p222>)
   (<p221> ^2 40 ^1 11)
   (<p222> ^2 41 ^1 21)
   
   (<p400> ^name on ^pair <p231>
         ^pair <p232>)
   (<p231> ^1 40 ^2 11)
   (<p232> ^1 41 ^2 21)

   
   (<o1> ^id 11 ^category location ^x 1 ^y 1 ^word start)
   (<o2> ^id 12 ^category location ^x 2 ^y 1)
   (<o3> ^id 13 ^category location ^x 3 ^y 1)
   (<o4> ^id 14 ^category location ^x 4 ^y 1)
   (<o5> ^id 15 ^category location ^x 5 ^y 1)
   (<o6> ^id 16 ^category location ^x 6 ^y 1)
   (<o7> ^id 17 ^category location ^x 7 ^y 1)
   (<o8> ^id 18 ^category location ^x 8 ^y 1)
   (<o9> ^id 19 ^category location ^x 9 ^y 1)
   (<o10> ^id 20 ^category location ^x 10 ^y 1)
   (<o11> ^id 21 ^category location ^x 11 ^y 1)
   (<o12> ^id 22 ^category location ^x 12 ^y 1)
   (<o13> ^id 23 ^category location ^x 13 ^y 1)
   (<o14> ^id 24 ^category location ^x 14 ^y 1)
   (<o15> ^id 25 ^category location ^x 15 ^y 1)
   (<o16> ^id 26 ^category location ^x 16 ^y 1)
   (<o17> ^id 27 ^category location ^x 17 ^y 1)
   (<o18> ^id 28 ^category location ^x 18 ^y 1)
   (<o19> ^id 29 ^category location ^x 19 ^y 1)
   (<o20> ^id 30 ^category location ^x 20 ^y 1)
   (<o21> ^id 31 ^category location ^x 21 ^y 1)
   (<o22> ^id 32 ^category location ^x 22 ^y 1)
   (<o23> ^id 33 ^category location ^x 23 ^y 1)
   (<o24> ^id 34 ^category location ^x 24 ^y 1)
   (<o25> ^id 35 ^category location ^x 25 ^y 1 ^word final)
   
   (<o27> ^id 40 ^category block ^word white)
   (<o26> ^id 41 ^category block ^word black)
   (<o28> ^id 10 ^category block ^word dice ^value 2)


(<nlps> ^nlp <c99> 
           ^nlp <c6> ^aname stack-block)
   
   (<c1> ^name block ^rtype single)
   
   (<c99> ^name value ^return-type number ^args <ag33> ^parameter <pp1>)
   (<pp1> ^1 <p11z>)
   (<p11z> ^param-id 4 ^type single)

   (<ag33> ^2 <c3>)
   
   (<c3> ^name dice ^args <ag9>)
   (<ag9> ^1 <c1>)
   
   (<c2> ^name location ^rtype single)
   
   (<c6> ^name count ^return-type number ^args <ag34> ^parameter <ppp>)
   (<ppp> ^1 <pa21> ^2 <pa21b>)
   (<pa21b> ^param-id 3 ^type set)
   (<pa21> ^param-id 4 ^type single)
   (<ag34> ^2 <c6a>) 
   
   (<c6a> ^name between-inclusive ^args <ag11> ^parameter <p3z7>)
   (<p3z7> ^2 <pa11> ^3 <pa11a> ^1 <pa11b>)
   (<pa11b> ^param-id 3 ^type set)
   (<pa11> ^param-id 1 ^type single)
   (<pa11a> ^param-id 2 ^type single)
   (<ag11> ^2 <c7> ^3 <cs1> ^1 <c2s>)
  
   (<c2s> ^name location ^rtype set)
    
   (<cs1> ^name above ^args <ag55> )
   (<ag55> ^1 <c2> ^2 <c2>)
   
   (<c7> ^name below ^args <ag66>)
   (<ag66> ^1 <c2> ^2 <c1>)
   
   
   (<T5> ^nlp-set <nlps>)
}

sp {chunk-multi*justification-580*t110-1
    :chunk
    (state <s1> ^gtype action ^list <l1> ^action <a1>)
    (<l1> ^game <g1>)
    (<a1> ^condition <c1>)
    (<c1> ^negative false ^name count ^args <a2> ^parameter <p1> ^result <r1>)
    (<a2> ^num 1 ^2 <*1>)
    (<p1> ^num 2)
    (<*1> ^rtype set ^result <r2>)
    (<r1> ^set <s2>)
    (<r2> ^set <s3>)
    (<s3> ^pair <p2>)
    (<p2> ^1 <*2>)
  -{(state <s1>)
    (<*2> -^<something>)}
    -->
    (<s2> ^pair <p3> +)
    (<p3> ^1 (size <*2>) + ^2 <*2> +)
}

sp {chunk-multi*justification-545*onc*t102-3
    :chunk
    (state <s1> ^gtype action ^list <l1> ^action <a1>)
    (<l1> ^game <g1>)
    (<a1> ^condition <c1>)
    (<c1> ^negative false ^name between-inclusive ^args <a2> ^parameter <p1>
          ^result <r3>)
    (<a2> ^num 3 ^3 <*1> ^1 <*8> ^2 <*2>)
    (<*1> ^result <r1>)
    (<r1> ^set <s2>)
    (<s2> ^pair <p2>)
    (<*8> ^result <r11>)
    (<r11> ^set <s21>)
    (<s21> ^pair <p3>)
    (<p2> ^1 <*3>)
    (<*3> ^y 1 ^x {<px6> > <px2>})
    (<p3> ^1 <*4>)
   -{ (<*4> ^x { <x1> > <px6> >= <px2> } ^x <x1>)}
   -{ (<*4> ^x { <x2> < <px6> <= <px2> } ^x <x2>)}
    (<*4> ^y 1)
    (<*2> ^result <r2>)
    (<r2> ^set <s3>)
    (<s3> ^pair <p4>)
    (<p4> ^1 { <*5> <> <*3> })
    (<*5> ^y 1 ^x <px2>)
    (<r3> ^set <s4>)
    (<s4> ^pair <p5>)
    (<p5> ^3 <*3> ^2 <*5> ^1 <*6>)
    -->
    (<*6> ^object <*4> +)
}



sp {chunk-multi*justification-427*t102-1
    :chunk
    (state <s1> ^gtype action ^list <l1> ^action <a1>)
    (<l1> ^game <g1>)
    (<a1> ^condition <c1>)
    (<c1> ^negative false ^name between-inclusive ^args <a2> ^parameter <p1>
          ^result <r3>)
    (<a2> ^num 3 ^3 <*1> ^2 <*2>)
    (<*1> ^result <r1>)
    (<r1> ^set <s2>)
    (<s2> ^pair <p2>)
    (<p2> ^1 <*3>)
    (<*3> ^x {<px6> > <px2>})
    (<*2> ^result <r2>)
    (<r2> ^set <s3>)
    (<s3> ^pair <p3>)
    (<p3> ^1 { <*4> <> <*3> })
    (<*4> ^x <px2>)
    (<r3> ^set <s4>)
    -->
    (<s4> ^pair <p4> +)
    (<p4> ^1 <*5> + ^3 <*3> + ^2 <*4> +)
}