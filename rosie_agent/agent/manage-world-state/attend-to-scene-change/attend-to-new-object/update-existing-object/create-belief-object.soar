# Creates a belief object for the existing world object

# Case: for epmem-obj that matches a world object with no belief-obj
#       copy bounding box info from the epmem object
sp {update-existing-object*propose*create-belief-object*source-type*epmem
   (state <s> ^name update-existing-object
              ^source-type epmem-obj
              ^source-obj <src>
              ^existing-obj <exist-obj>)
   (<src> ^position <pos>
          ^rotation <rot>
          ^scale <scl>)
   (<exist-obj> ^belief-id <bel-id>
               -^belief-obj)
-->
   (<s> ^operator <o> + >)
   (<o> ^name create-belief-object
        ^belief-id <bel-id>
        ^position <pos>
        ^rotation <rot>
        ^scale <scl>)
}

# Create the belief object
sp {update-existing-object*apply*create-belief-object
   (state <s> ^name update-existing-object
              ^operator <o>
              ^top-state.svs.command <cmd>)
   (<o> ^name create-belief-object
        ^belief-id <bel-id>
        ^position <pos>
        ^rotation <rot>
        ^scale <scl>)
   (<pos> ^x <px> ^y <py> ^z <pz>)
   (<rot> ^x <rx> ^y <ry> ^z <rz>)
   (<scl> ^x <sx> ^y <sy> ^z <sz>)
-->
   (<cmd> ^add_node <add>)
   (<add> ^id <bel-id>
          ^parent world
          ^geometry box
          ^position <npos>
          ^rotation <nrot>
          ^scale <nscl>
          ^tags <tags>)
   (<npos> ^x <px> ^y <py> ^z <pz>)
   (<nrot> ^x <rx> ^y <ry> ^z <rz>)
   (<nscl> ^x <sx> ^y <sy> ^z <sz>)
   (<tags> ^object-source belief)
}
               
