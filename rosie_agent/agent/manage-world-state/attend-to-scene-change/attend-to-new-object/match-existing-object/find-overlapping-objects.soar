# For a perception object, find out if it is overlapped by any known world objects
#    If so, this could be a sign that this new perceptual object is part of an existing object

# Step 1: Find all belief objects that intersect the new perceptual object
sp {match-existing-object*propose*intersect-command
   (state <s> ^name match-existing-object
             -^agent-params.domain internal
              ^source-type perception-obj
              ^source-obj.id <perc-id>
             -^intersect-command.result)
-->
   (<s> ^operator <o> +)
   (<o> ^name intersect-command
        ^object-id <perc-id>
        ^candidate-set <cand>)
   (<cand> ^type tag_select 
           ^a.type all_nodes
           ^tag_name object-source
           ^tag_value belief)
}

# Step 2: For each intersecting object, find out how much it overlaps the new perceptual object
sp {match-existing-object*propose*overlap-command
   (state <s> ^name match-existing-object
              ^source-type perception-obj
              ^source-obj.id <new-id>
              ^intersect-command.result { <int-id> <> none }
             -^overlap-results.result.object-b <int-id>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name overlap-command
        ^object-a <new-id>
        ^object-b <int-id>)
}

# Copy the result of the overlap filter
sp {match-existing-object*apply*overlap-command*copy-result
   (state <s> ^name match-existing-object
              ^operator.name overlap-command
              ^overlap-command <cmd>
              ^overlap-results <results>)
   (<cmd> ^result <res>)
   (<res> ^overlap <val>)
-->
   (<s> ^overlap-command <cmd> -)
   (<results> ^result <res>)
}

sp {match-existing-object*apply*overlap-command*print-perception*report*overlap
   (state <s> ^name match-existing-object
              ^operator.name overlap-command
              ^overlap-command.result <res>
              ^agent-params.print-perception true)
   (<res> ^object-a <a> ^object-b <b> ^overlap <val>)
-->
   (write |Overlap: | <val> | of | <a> | is contained by | <b> (crlf))
} 
