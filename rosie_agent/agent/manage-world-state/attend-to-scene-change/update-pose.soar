##################################################################
#
# Update the pose of the object
#
##################################################################

sp {anystate*apply*attend-to-scene-change*update-pose*remove*update*flag*no*perception
   (state <s> ^operator <o>
              ^top-state.svs.command <cmd>)
   (<o> ^name attend-to-scene-change
        ^change.info.op-name update-pose
        ^change.object-info <obj-info>)
   (<obj-info> -^perception-obj <any>
               -^wm-obj.predicates.arm-status grabbed
                ^update-pose true)
-->
   (<obj-info> ^update-pose true -)
}


# Send command to svs (not grabbed)
sp {anystate*apply*attend-to-scene-change*update-pose*svs*copy_node
   (state <s> ^operator <o>
              ^top-state.svs.command <cmd>)
   (<o> ^name attend-to-scene-change
        ^change.info.op-name update-pose
        ^change.object-info <obj-info>)
   (<obj-info> ^perception-obj.id <perc-id>
               ^belief-obj.id <bel-id>
               -^wm-obj.predicates.arm-status grabbed)
-->
   (<cmd> ^copy_transform <copy>)
   (<copy> ^source <perc-id>
           ^destination <bel-id>
           ^position yes
           ^rotation yes
           ^scale yes)
   (<obj-info> ^copy-command <copy>)
}

# Send the command to svs
sp {anystate*apply*attend-to-scene-change*update-pose*svs*copy_node*grabbed
   (state <s> ^operator <o>
              ^top-state.svs.command <cmd>)
   (<o> ^name attend-to-scene-change
        ^change.info.op-name update-pose
        ^change.object-info <obj-info>)
   (<obj-info> ^belief-obj.id <bel-id>
               ^wm-obj.predicates.arm-status grabbed)
-->
   (<cmd> ^copy_transform <copy>)
   (<copy> ^source robot
           ^destination <bel-id>
           ^position yes
           ^rotation no
           ^scale no)
   (<obj-info> ^copy-command <copy>)
}

# Once the command is finished, clean up the flags
sp {anystate*apply*attend-to-scene-change*update-pose*cleanup*flag
   (state <s> ^operator <o>
              ^top-state.svs.command <cmd>)
   (<o> ^name attend-to-scene-change
        ^change.info.op-name update-pose
        ^change.object-info <obj-info>)
   (<obj-info> ^update-pose true
               ^copy-command.status success)
-->
   (<obj-info> ^update-pose true -)
}

# Once the command is finished, clean up the flags
sp {anystate*apply*attend-to-scene-change*update-pose*cleanup*command
   (state <s> ^operator <o>
              ^top-state.svs.command <cmd>)
   (<o> ^name attend-to-scene-change
        ^change.info.op-name update-pose
        ^change.object-info <obj-info>)
   (<obj-info> ^copy-command <copy>)
   (<copy> ^status success)
-->
   (<obj-info> ^copy-command <copy> -)
   (<cmd> ^copy_transform <copy> -)
}
   
# If print-perception is on, print a message
sp {anystate*apply*attend-to-scene-change*update-pose*print-perception*print
   (state <s> ^operator <o>
              ^agent-params.print-perception true)
   (<o> ^name attend-to-scene-change
        ^change <c>)
   (<c> ^info.op-name update-pose
        ^object-info.object-handle <obj-handle>)
-->
   (write |Object | <obj-handle> |: updated pose| (crlf))
}
   
