The delete-object substate is reponsible for deleting all traces of the object from short term memory
	It first updates the semantic memory representation (if applicable)
	And removes it from the top-state world, object-monitor, and svs

### State Representation ###

object-info - reference to object-monitor.object-info
	elaborated from superstate.operator.object-info
	
smem-obj none or <lti> - result of the retrieve-smem-object operator

updated-smem-object true - result of the update-smem-object operator
	
	
### operators + order ###

1. retrieve-smem-object
2. update-smem-object
3. complete-delete-object

### retrieve-smem-object ###

If there is an (^in-smem true) flag on object-info.wm-obj
	Then try to retrieve the object from semantic memory using the handle
	Creates (^smem-obj none) or (^smem-obj <lti>)
	
### update-smem-object ###

If a valid ^smem-obj exists on the state, then update its predicates and store
	Creates (^updated-smem-object true)
	
### complete-delete-object ###

Selected once all other operators have finished
Does the following to delete the object:
	Deletes the wm-obj from top-state.world.objects
	Removes any predicate instances involving the object from top-state world
	Deletes the belief-obj from svs
	Removes the object-info from the object-monitor
	Removes the delete-object change from perception-monitor.changes
