# Adds the ^is-visible1 not-visible1 predicate
sp {anystate*apply*attend-to-scene-change*attend-to-newly-not-visible-object*add*not-visible1
   (state <s> ^operator <o>)
   (<o> ^name attend-to-scene-change
        ^change <c>)
   (<c> ^type newly-not-visible-object
        ^object-info.wm-obj.predicates <wm-preds>)
-->
   (<wm-preds> ^is-visible1 not-visible1)
}

# Removes the ^is-visible1 visible1 predicate
sp {anystate*apply*attend-to-scene-change*attend-to-newly-not-visible-object*remove*visible1
   (state <s> ^operator <o>)
   (<o> ^name attend-to-scene-change
        ^change <c>)
   (<c> ^type newly-not-visible-object
        ^object-info.wm-obj.predicates <wm-preds>)
   (<wm-preds> ^is-visible1 visible1)
-->
   (<wm-preds> ^is-visible1 visible1 -)
}

# if print-perception is on, print a message
sp {anystate*apply*attend-to-scene-change*attend-to-newly-not-visible-object*print-perception*print
   (state <s> ^operator <o>
              ^agent-params.print-perception true)
   (<o> ^name attend-to-scene-change
        ^change <c>)
   (<c> ^type newly-not-visible-object
        ^object-info.object-handle <handle>)
-->
   (write |Object | <handle> |: marking not-visible| (crlf))
}
