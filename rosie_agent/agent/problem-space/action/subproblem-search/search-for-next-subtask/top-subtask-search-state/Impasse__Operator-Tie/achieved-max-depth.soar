sp {problem-space*action*selection*apply*achieved-max-depth*report*subtask-search-failed*superstate
   (state <s> ^name selection
              ^problem-space.name action
              ^operator.name achieved-max-depth
              ^quiescence t
              ^superstate <ss>)
-->
   (<ss> ^subtask-search-failed true)
}

sp {problem-space*action*selection*apply*achieved-max-depth*interrupt-task-search*interrupt
   (state <s> ^name selection
              ^problem-space.name action
              ^operator.name achieved-max-depth
              ^agent-params.interrupt-task-search true
              ^quiescence t
              ^superstate <ss>)
-->
   (interrupt)
}

## We exhaustively searched for a plan, report failure no-action-selection-knowledge
#sp {action*selection*apply*achieved-max-depth*report-no-action-selection-knowledge
#   (state <s> ^name selection
#              ^problem-space.name action
#              ^operator.name achieved-max-depth
#              ^top-state.interaction.status <status>)
#-->
#   (<status> ^failure.type no-action-selection-knowledge)
#}
#
## Mark that policy-learning-needed is true
#sp {action*selection*apply*achieved-max-depth*mark*policy-learning-needed
#   (state <s> ^name selection
#              ^problem-space.name action
#              ^operator.name achieved-max-depth
#              ^quiescence t
#              ^top-state.task-stack.top <top-task-seg>)
#-->
#   (<top-task-seg> ^policy-learning-needed true)
#}
