########## evaluate-operator state #########

sp {problem-space*action*evaluate-operator*elaborate*problem-space*execution-type*internal
   (state <s> ^name evaluate-operator
              ^problem-space <ps>)
   (<ps> ^name action)
-->
   (<ps> ^execution-type internal)
}

sp {problem-space*action*evaluate-operator*elaborate*problem-space*default-copy*info
   (state <s> ^name evaluate-operator
              ^problem-space <ps>)
   (<ps> ^name action
        -^subproblem waypoint-search)
-->
   (<ps> ^default-state-copy no
         ^default-operator-copy custom)
}

sp {problem-space*action*evaluate-operator*elaborate*problem-space*world*copy-type*deep
   (state <s> ^name evaluate-operator
              ^problem-space <ps>)
   (<ps> ^name action
        -^subproblem waypoint-search
         ^world <world>)
-->
   (<world> ^copy-type deep)
}

sp {problem-space*action*evaluate-operator*elaborate*problem-space*subtasks*copy-type*deep
   (state <s> ^name evaluate-operator
              ^problem-space <ps>)
   (<ps> ^name action
        -^subproblem waypoint-search
         ^subtasks <subs>)
-->
   (<subs> ^copy-type deep)
}

sp {problem-space*action*evaluate-operator*elaborate*propose-subtasks*true
   (state <s> ^name evaluate-operator
              ^problem-space <ps>)
   (<ps> ^name action
         ^learning.type exploration)
-->
   (<ps> ^propose-subtasks true)
}

#sp {problem-space*action*evaluate-operator*elaborate*problem-space*learning*use*chunking
#   (state <s> ^name evaluate-operator
#              ^problem-space <ps>)
#   (<ps> ^name action
#         ^subproblem search
#         ^learning <l>)
#-->
#   (<l> ^use chunking)
#}

#sp {problem-space*action*selection*elaborate*problem-space*learning*use*chunking
#   (state <s> ^name selection
#              ^problem-space <ps>)
#   (<ps> ^name action
#         ^subproblem search
#         ^learning <l>)
#-->
#   (<l> ^use chunking)
#}

## If the desired goal is satisfied, report success
sp {problem-space*action*evaluate-operator*elaborate*successs*desired*satisfied
   (state <s> ^name evaluate-operator
              ^problem-space.name action
              ^desired <d>)
   (<d> ^satisfied true)
-->
   (<s> ^success <d>)
}

#sp {problem-space*action*evaluate-operator*elaborate*success*if*desired*not*duplicate
#   (state <s> ^name evaluate-operator
#              ^problem-space.name action
#              ^desired <des>
#              ^success <des>
#              ^superstate <sel>)
#   (<des> -^duplicate-of <any>)
#   (<sel> ^evaluation <eval>
#          ^operator <o>)
#   (<o> ^evaluation <eval>)
#-->
#   (<eval> ^symbolic-value success)
#}
