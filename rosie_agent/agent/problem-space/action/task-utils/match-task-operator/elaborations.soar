sp {match-task-operator*elaborate*state*name*learn-matches-task-op-elaboration-rule
   (state <s> ^superstate.match-task-operator <mto>
              ^impasse no-change
              ^attribute state)
-->
   (<s> ^name learn-matches-task-op-elaboration-rule
        ^ss-match-task-operator <mto>)
}

sp {match-task-operator*elaborate*task-op-to-match
   (state <s> ^name learn-matches-task-op-elaboration-rule
              ^ss-match-task-operator.task-operator <task-op>)
-->
   (<s> ^task-op-to-match <task-op>
        ^task-info <info>)
}

sp {learn-matches-task-op-elaboration-rule*elaborate*candidate
   (state <s> ^name learn-matches-task-op-elaboration-rule
              ^ss-match-task-operator.candidate-tasks.candidate-task-operator <cand-tkop>)
-->
   (<s> ^candidate <cand>)
   (<cand> ^task-operator <cand-tkop>)
}

sp {task-utils*match-task-operator*elaborate*no-matching-candidates
   (state <s> ^name learn-matches-task-op-elaboration-rule
             -^candidate.successful-match yes)
-->
   (<s> ^no-matching-candidates true)
}

sp {task-utils*match-task-operator*elaborate*learning-task-utils-rule
   (state <s> ^name learn-matches-task-op-elaboration-rule
              ^ss-match-task-operator <ss-mto>
             -^no-matching-candidates true)
-->
   (<s> ^learning-task-utils-rule true)
}

# elaborate argument information 
## ENUMERATE: 0-5 arguments
sp {learn-matches-task-op-elaboration-rule*elaborate*no-args
   (state <s> ^name learn-matches-task-op-elaboration-rule
              ^task-op-to-match <task-op>
              ^task-info <info>)
   (<task-op> -^{ << arg1 arg2 arg3 arg4 arg5 >> } <arg>)
-->
   (<info> ^num-args 0)
}

sp {learn-matches-task-op-elaboration-rule*elaborate*arg-names*1*args
   (state <s> ^name learn-matches-task-op-elaboration-rule
              ^task-op-to-match <task-op>
              ^task-info <info>)
   (<task-op> ^{ <a1>        << arg1 arg2 arg3 arg4 arg5 >> } <arg1>
          -^{ <a2> <> <a1> << arg1 arg2 arg3 arg4 arg5 >> } <arg2>)
-->
   (<info> ^num-args 1
           ^arg-name <a1>
           ^<a1> <arg1>)
}

sp {learn-matches-task-op-elaboration-rule*elaborate*arg-names*2*args
   (state <s> ^name learn-matches-task-op-elaboration-rule
              ^task-op-to-match <task-op>
              ^task-info <info>)
   (<task-op> ^{ <a1>        << arg1 arg2 arg3 arg4 arg5 >> } <arg1>
           ^{ <a2> > <a1> << arg1 arg2 arg3 arg4 arg5 >> } <arg2>
          -^{ <a3> <> <a2> <> <a1> << arg1 arg2 arg3 arg4 arg5 >> } <arg3>)
-->
   (<info> ^num-args 2
           ^arg-name <a1> <a2>
           ^<a1> <arg1>
           ^<a2> <arg2>)
}

sp {learn-matches-task-op-elaboration-rule*elaborate*arg-names*3*args
   (state <s> ^name learn-matches-task-op-elaboration-rule
              ^task-op-to-match <task-op>
              ^task-info <info>)
   (<task-op> ^{ <a1>        << arg1 arg2 arg3 arg4 arg5 >> } <arg1>
           ^{ <a2> > <a1> << arg1 arg2 arg3 arg4 arg5 >> } <arg2>
           ^{ <a3> > <a2> << arg1 arg2 arg3 arg4 arg5 >> } <arg3>
          -^{ <a4> <> <a3> <> <a2> <> <a1> << arg1 arg2 arg3 arg4 arg5 >> } <arg4>)
-->
   (<info> ^num-args 3
           ^arg-name <a1> <a2> <a3> 
           ^<a1> <arg1>
           ^<a2> <arg2>
           ^<a3> <arg3>)
}

sp {learn-matches-task-op-elaboration-rule*elaborate*arg-names*4*args
   (state <s> ^name learn-matches-task-op-elaboration-rule
              ^task-op-to-match <task-op>
              ^task-info <info>)
   (<task-op> ^{ <a1>        << arg1 arg2 arg3 arg4 arg5 >> } <arg1>
           ^{ <a2> > <a1> << arg1 arg2 arg3 arg4 arg5 >> } <arg2>
           ^{ <a3> > <a2> << arg1 arg2 arg3 arg4 arg5 >> } <arg3>
           ^{ <a4> > <a3> << arg1 arg2 arg3 arg4 arg5 >> } <arg4>
          -^{ <a5> <> <a4> <> <a3> <> <a2> <> <a1> << arg1 arg2 arg3 arg4 arg5 >> } <arg5>)
-->
   (<info> ^num-args 4
           ^arg-name <a1> <a2> <a3> <a4> 
           ^<a1> <arg1>
           ^<a2> <arg2>
           ^<a3> <arg3>
           ^<a4> <arg4>)
}

sp {learn-matches-task-op-elaboration-rule*elaborate*arg-names*5*args
   (state <s> ^name learn-matches-task-op-elaboration-rule
              ^task-op-to-match <task-op>
              ^task-info <info>)
   (<task-op> ^{ <a1>        << arg1 arg2 arg3 arg4 arg5 >> } <arg1>
           ^{ <a2> > <a1> << arg1 arg2 arg3 arg4 arg5 >> } <arg2>
           ^{ <a3> > <a2> << arg1 arg2 arg3 arg4 arg5 >> } <arg3>
           ^{ <a4> > <a3> << arg1 arg2 arg3 arg4 arg5 >> } <arg4>
           ^{ <a5> > <a4> << arg1 arg2 arg3 arg4 arg5 >> } <arg5>
          -^{ <a6> <> <a5> <> <a4> <> <a3> <> <a2> <> <a1> << arg1 arg2 arg3 arg4 arg5 >> } <arg6>)
-->
   (<info> ^num-args 5
           ^arg-name <a1> <a2> <a3> <a4> <a5>
           ^<a1> <arg1>
           ^<a2> <arg2>
           ^<a3> <arg3>
           ^<a4> <arg4>
           ^<a5> <arg5>)
}
