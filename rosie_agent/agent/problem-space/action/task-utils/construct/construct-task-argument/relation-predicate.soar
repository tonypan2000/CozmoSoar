### construct relation-predicate

sp {task-utils*construct-task-argument*expand*relation-predicate
   (state <s> ^construct-task-argument <arg>)
   (<arg> ^arg-type predicate
          ^source <src>)
   (<src> ^type relation
          ^1 <obj1>
          ^2 <obj2>)
-->
   (<arg> ^pred-type relation)

   (<s> ^construct-task-argument <obj1-arg>)
   (<obj1-arg> ^arg-type object
               ^source <obj1>)
   (<arg> ^create-obj1 <obj1-arg>)

   (<s> ^construct-task-argument <obj2-arg>)
   (<obj2-arg> ^arg-type object
               ^source <obj2>)
   (<arg> ^create-obj2 <obj2-arg>)
}
          

sp {task-utils*construct-task-argument*propose*construct-task-argument*relation-predicate
   (state <s> ^construct-task-argument <arg>)
   (<arg> ^arg-type predicate
          ^pred-type relation
          ^source.handle <handle>
          ^create-obj1.created-arg.id <obj1>
          ^create-obj2.created-arg.id <obj2>
         -^created-arg)
-->
   (<s> ^operator <o> + =)
   (<o> ^name construct-task-argument
        ^argument <arg>
        ^arg-type predicate
        ^pred-type relation
        ^handle <handle>
        ^1 <obj1>
        ^2 <obj2>)
}

sp {task-utils*construct-task-argument*apply*construct-task-argument*relation-predicate
   (state <s> ^operator <o>)
   (<o> ^name construct-task-argument
        ^argument <arg>
        ^arg-type predicate
        ^pred-type relation
        ^handle <handle>
        ^1 <obj1>
        ^2 <obj2>)
-->
   (<arg> ^created-arg <carg>)
   (<carg> ^type relation
           ^handle <handle>
           ^1 <obj1>
           ^2 <obj2>)
}

