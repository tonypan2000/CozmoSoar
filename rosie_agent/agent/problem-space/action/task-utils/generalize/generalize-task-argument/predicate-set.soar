### GENERALIZE PREDICATE SET

sp {task-utils*generalize-task-argument*predicate-set*elaborate*pred-count
   (state <s> ^generalize-task-argument <arg>)
   (<arg> ^arg-type predicate-set
          ^instantiation.pred-count <c>)
-->
   (<arg> ^pred-count <c>)
}

# ENUMERATE: 1-5 predicates
sp {task-utils*generalize-task-argument*expand*predicate-set*predicate*1
   (state <s> ^generalize-task-argument <arg>)
   (<arg> ^arg-type predicate-set
          ^instantiation.{1} <p1>)
-->
   (<s> ^generalize-task-argument <gen-p1>)
   (<gen-p1> ^arg-type predicate
             ^instantiation <p1>)
   (<arg> ^generalize-pred1 <gen-p1>)
}

sp {task-utils*generalize-task-argument*expand*predicate-set*predicate*2
   (state <s> ^generalize-task-argument <arg>)
   (<arg> ^arg-type predicate-set
          ^instantiation.{2} <p2>)
-->
   (<s> ^generalize-task-argument <gen-p2>)
   (<gen-p2> ^arg-type predicate
             ^instantiation <p2>)
   (<arg> ^generalize-pred2 <gen-p2>)
}

sp {task-utils*generalize-task-argument*expand*predicate-set*predicate*3
   (state <s> ^generalize-task-argument <arg>)
   (<arg> ^arg-type predicate-set
          ^instantiation.{3} <p3>)
-->
   (<s> ^generalize-task-argument <gen-p3>)
   (<gen-p3> ^arg-type predicate
             ^instantiation <p3>)
   (<arg> ^generalize-pred3 <gen-p3>)
}

sp {task-utils*generalize-task-argument*expand*predicate-set*predicate*4
   (state <s> ^generalize-task-argument <arg>)
   (<arg> ^arg-type predicate-set
          ^instantiation.{4} <p4>)
-->
   (<s> ^generalize-task-argument <gen-p4>)
   (<gen-p4> ^arg-type predicate
             ^instantiation <p4>)
   (<arg> ^generalize-pred4 <gen-p4>)
}

sp {task-utils*generalize-task-argument*expand*predicate-set*predicate*5
   (state <s> ^generalize-task-argument <arg>)
   (<arg> ^arg-type predicate-set
          ^instantiation.{5} <p5>)
-->
   (<s> ^generalize-task-argument <gen-p5>)
   (<gen-p5> ^arg-type predicate
             ^instantiation <p5>)
   (<arg> ^generalize-pred5 <gen-p5>)
}

# Propose generalize-task-argument predicate-set
sp {task-utils*generalize-task-argument*propose*generalize-task-argument*predicate-set
  (state <s> ^generalize-task-argument <arg>)
  (<arg> ^arg-type predicate-set
        -^general-arg-rep)
-->
  (<s> ^operator <o> + =)
  (<o> ^name generalize-task-argument
       ^argument <arg>
       ^arg-type predicate-set)
}

# Reject generalize-task-argument predicate-set if ungeneralized predicate
sp {task-utils*generalize-task-argument*reject*generalize-task-argument*predicate-set*ungeneralized*predicate
   (state <s> ^operator <o> +)
   (<o> ^name generalize-task-argument
        ^argument <arg>
        ^arg-type predicate-set)
   (<arg> ^<pred-num> <pred>)
   (<pred> ^arg-type predicate
          -^general-arg-rep)
-->
   (<s> ^operator <o> -)
}

# ENUMERATE: 1-5 predicates

sp {task-utils*generalize-task-argument*apply*generalize-task-argument*predicate-set*1
   (state <s> ^operator <o>)
   (<o> ^name generalize-task-argument
        ^argument <arg>
        ^arg-type predicate-set)
   (<arg> ^pred-count 1
          ^generalize-pred1.general-arg-rep <rep1>)
-->
   (<arg> ^general-arg-rep <rep>)
   (<rep> ^pred-count 1
          ^1 <rep1>)
}

sp {task-utils*generalize-task-argument*apply*generalize-task-argument*predicate-set*2
   (state <s> ^operator <o>)
   (<o> ^name generalize-task-argument
        ^argument <arg>
        ^arg-type predicate-set)
   (<arg> ^pred-count 2
          ^generalize-pred1.general-arg-rep <rep1>
          ^generalize-pred2.general-arg-rep <rep2>)
-->
   (<arg> ^general-arg-rep <rep>)
   (<rep> ^pred-count 2
          ^1 <rep1>
          ^2 <rep2>)
}

sp {task-utils*generalize-task-argument*apply*generalize-task-argument*predicate-set*3
   (state <s> ^operator <o>)
   (<o> ^name generalize-task-argument
        ^argument <arg>
        ^arg-type predicate-set)
   (<arg> ^pred-count 3
          ^generalize-pred1.general-arg-rep <rep1>
          ^generalize-pred2.general-arg-rep <rep2>
          ^generalize-pred3.general-arg-rep <rep3>)
-->
   (<arg> ^general-arg-rep <rep>)
   (<rep> ^pred-count 3
          ^1 <rep1>
          ^2 <rep2>
          ^3 <rep3>)
}

sp {task-utils*generalize-task-argument*apply*generalize-task-argument*predicate-set*4
   (state <s> ^operator <o>)
   (<o> ^name generalize-task-argument
        ^argument <arg>
        ^arg-type predicate-set)
   (<arg> ^pred-count 4
          ^generalize-pred1.general-arg-rep <rep1>
          ^generalize-pred2.general-arg-rep <rep2>
          ^generalize-pred3.general-arg-rep <rep3>
          ^generalize-pred4.general-arg-rep <rep4>)
-->
   (<arg> ^general-arg-rep <rep>)
   (<rep> ^pred-count 4
          ^1 <rep1>
          ^2 <rep2>
          ^3 <rep3>
          ^4 <rep4>)
}

sp {task-utils*generalize-task-argument*apply*generalize-task-argument*predicate-set*5
   (state <s> ^operator <o>)
   (<o> ^name generalize-task-argument
        ^argument <arg>
        ^arg-type predicate-set)
   (<arg> ^pred-count 5
          ^generalize-pred1.general-arg-rep <rep1>
          ^generalize-pred2.general-arg-rep <rep2>
          ^generalize-pred3.general-arg-rep <rep3>
          ^generalize-pred4.general-arg-rep <rep4>
          ^generalize-pred5.general-arg-rep <rep5>)
-->
   (<arg> ^general-arg-rep <rep>)
   (<rep> ^pred-count 5
          ^1 <rep1>
          ^2 <rep2>
          ^3 <rep3>
          ^4 <rep4>
          ^5 <rep5>)
}

