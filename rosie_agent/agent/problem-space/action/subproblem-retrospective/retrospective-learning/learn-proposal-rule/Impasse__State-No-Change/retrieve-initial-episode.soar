sp {learn-proposal-rule-substate*propose*retrieve-initial-episode
   (state <s> ^name learn-proposal-rule-substate
              ^learning-episode
             -^initial-episode)
-->
   (<s> ^operator <o> +)
   (<o> ^name retrieve-initial-episode)
}

sp {learn-proposal-rule-substate*apply*retrieve-initial-episode
   (state <s> ^name learn-proposal-rule-substate
              ^operator.name retrieve-initial-episode
              ^learning-episode.operator <o>
              ^epmem.command <cmd>)
   (<o> ^name satisfy-purpose
        ^purpose.parameters.task-segment.task-operator.task-handle <task-handle>)
-->
   (<cmd> ^query <q>)
   (<q> ^task-stack.top <top>)
   (<top> ^start-of-execution true
          ^task-operator.task-handle <task-handle>)
}

sp {learn-proposal-rule-substate*apply*retrieve-initial-episode*success
   (state <s> ^name learn-proposal-rule-substate
              ^operator.name retrieve-initial-episode
              ^epmem <epmem>)
   (<epmem> ^result <res>
            ^result.retrieved <episode>
            ^command <cmd>)
   (<res> ^success <q>
          ^retrieved <episode>
          ^memory-id <ep-id>
          ^normalized-match-score 1.0)
   (<cmd> ^query <q>)
-->
   (<s> ^initial-episode <episode>)
   (<cmd> ^query <q> -)
}

