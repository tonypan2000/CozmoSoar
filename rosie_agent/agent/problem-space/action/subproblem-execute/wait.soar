# If there is a ^propose-wait true flag on the state, then propose wait
sp {subproblem*execute*propose*wait
   (state <s> ^problem-space.subproblem execute
              ^propose-wait true
             -^operator.name wait)
-->
   (<s> ^operator <o> + < =)
   (<o> ^name wait)
}

sp {subproblem*execute*elaborate*propose-wait*unsatisfied*clause
   (state <s> ^problem-space.subproblem execute
              ^task-operator.{ <type> << until-clause after-clause >> } <clause>)
   (<clause> -^satisfied true)
-->
   (<s> ^propose-wait true)
}

sp {subproblem*execute*reject*child*tasks*unsatisfied*after-clause
   (state <s> ^problem-space.subproblem execute
              ^task-operator.after-clause <after>
              ^operator <o> +)
   (<o> ^item-type task-operator)
   (<after> -^satisfied true)
-->
   (<s> ^operator <o> -)
}

sp {subproblem*execute*reject*perform*tasks*unsatisfied*after-clause
   (state <s> ^problem-space.subproblem execute
              ^task-operator.after-clause <after>
              ^operator <o> +)
   (<o> ^name << perform-close perform-turn-on perform-turn-off perform-open >>)
   (<after> -^satisfied true)
-->
   (<s> ^operator <o> -)
}

sp {subproblem*execute*elaborate*propose-wait*sent*command
   (state <s> ^problem-space.subproblem execute
              ^current-task-segment.<cmd-name> <cmd>)
   (<cmd> ^item-type output-command
         -^status)
-->
   (<s> ^propose-wait true)
}

sp {subproblem*execute*elaborate*propose-wait*sent*command*status*running
   (state <s> ^problem-space.subproblem execute
              ^current-task-segment.<cmd-name> <cmd>)
   (<cmd> ^item-type output-command
          ^status << running executing >>)
-->
   (<s> ^propose-wait true)
}
