sp {action*problem-space*execute*apply*report-failure*mark*status*failure
   (state <s> ^problem-space.name action
              ^problem-space.execution-type external
              ^operator.name report-failure
              ^current-task-segment <seg>)
-->
   (<seg> ^status failure)
}

sp {action*problem-space*execute*apply*report-failure*mark*execution-failure
   (state <s> ^problem-space.name action
              ^problem-space.execution-type external
              ^operator <o>
              ^current-task-segment <seg>)
   (<o> ^name report-failure
        ^failure-type <type>)
-->
   (<seg> ^execution-failure <type>)
}

sp {action*problem-space*execute*apply*report-failure*copy*failure-info
   (state <s> ^problem-space.name action
              ^problem-space.execution-type external
              ^operator <o>
              ^current-task-segment <seg>)
   (<o> ^name report-failure
        ^failure-type <type>
        ^failure-info <info>)
-->
   (<seg> ^failure <f>)
   (<f> ^type <type>
        ^info <info>)
}

sp {action*problem-space*execute*apply*report-failure*copy*failure-info*none
   (state <s> ^problem-space.name action
              ^problem-space.execution-type external
              ^operator <o>
              ^current-task-segment <seg>)
   (<o> ^name report-failure
        ^failure-type <type>
        -^failure-info <info>)
-->
   (<seg> ^failure-info none)
}

sp {action*problem-space*execute*apply*report-failure*remove*output*commands
   (state <s> ^problem-space.name action
              ^problem-space.execution-type external
              ^operator.name report-failure
              ^current-task-segment <seg>
              ^io.output-link <out>)
   (<seg> ^<cmd-name> <cmd>)
   (<out> ^<out-name> <cmd>)
-->
   (<out> ^<out-name> <cmd> -)
}
