sp {subproblem*execute*propose*complete-task*success*desired*satisfied*no*smem*goal
   (state <s> ^problem-space.subproblem execute
              ^task-concept-network <tcn>
              ^desired <des>
              ^current-task-segment <seg>)
   (<tcn> -^goal <goal>)
   (<des> ^satisfied true)
   (<seg> -^status)
-->
   (<s> ^operator <o> + =)
   (<o> ^name complete-task
        ^status success)
}

sp {subproblem*execute*propose*complete-task*satisfied*until-clause
   (state <s> ^problem-space.subproblem execute
              ^task-operator.until-clause.satisfied true)
-->
   (<s> ^operator <o> + =)
   (<o> ^name complete-task
        ^status success)
}

sp {subproblem*execute*propose*complete-task*success*desired*satisfied*final*subgoal
   (state <s> ^problem-space.subproblem execute
              ^task-concept-network.goal <g>
              ^desired <des>
              ^current-task-segment <seg>)
   (<g> ^subgoal-count <c>
        ^{<c>}.handle <subgoal-h>)
   (<des> ^handle <subgoal-h>
          ^satisfied true)
   (<seg> -^status)
-->
   (<s> ^operator <o> + =)
   (<o> ^name complete-task
        ^status success)
}

sp {subproblem*execute*propose*complete-task*success*desired*satisfied*final*subgoal*unsatisfied*conditional*action
   (state <s> ^problem-space.subproblem execute
              ^evaluate-subtask-conditions.instantiation <i>
              ^task-concept-network.goal <g>
              ^desired.handle <subgoal-h>
              ^current-task-segment <seg>)
   (<g> ^subgoal-count <c>
        ^{<c>}.handle <subgoal-h>)
   (<seg> -^status)
   (<i> -^satisfied true)
-->
   (<s> ^operator <o> + =)
   (<o> ^name complete-task
        ^status success)
}


sp {subproblem*execute*propose*complete-task*unrecoverable-failure
   (state <s> ^problem-space.subproblem execute
              ^current-task-segment <seg>)
   (<seg> ^unrecoverable-failure <name>
       -^status)
-->
   (<s> ^operator <o> + >)
   (<o> ^name complete-task
        ^status failure
        ^failure-name <name>)
}

sp {subproblem*execute*apply*complete-task*mark*status*success
   (state <s> ^problem-space.subproblem execute
              ^operator <o>
              ^current-task-segment <seg>)
   (<o> ^name complete-task
        ^status <status>)
-->
   (<seg> ^status <status>)
}

sp {subproblem*execute*apply*complete-task*remove*output*commands
   (state <s> ^problem-space.subproblem execute
              ^operator.name complete-task
              ^current-task-segment <seg>
              ^io.output-link <out>)
   (<seg> ^<cmd-name> <cmd>)
   (<out> ^<out-name> <cmd>)
   (<cmd> ^item-type output-command
          ^status << success succeeded failure failed >>)
-->
   (<out> ^<out-name> <cmd> -)
}

