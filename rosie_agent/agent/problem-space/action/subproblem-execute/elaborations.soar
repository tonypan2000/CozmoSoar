# Elaborate: task-stack from superstate (link to top-state.task-stack)
sp {subproblem*execute*elaborate*task-stack*from*superstate
   (state <s> ^problem-space.subproblem execute
              ^superstate.task-stack <stack>)
-->
   (<s> ^task-stack <stack>)
}

# Elaborate: current-task-segment, the segment from the task-stack for the task-operator
sp {subproblem*execute*elaborate*current-task-segment*from*superstate*child-task-segment
   (state <s> ^problem-space.subproblem execute
              ^task-operator <o>
              ^superstate.child-task-segment <seg>)
   (<seg> ^task-operator <o>)
-->
   (<s> ^current-task-segment <seg>)
}

# Elaborate: parent-task-segment, the previous task segment on the task-stack
sp {subproblem*execute*elaborate*parent-task-segment
   (state <s> ^problem-space.subproblem execute
              ^current-task-segment.prev { <parent> <> none })
-->
   (<s> ^parent-task-segment <parent>)
}

# Elaborate: child-task-segment, the next task segment on the task-stack 
sp {subproblem*execute*elaborate*child-task-segment
   (state <s> ^problem-space.subproblem execute
              ^current-task-segment.next { <child> <> none })
-->
   (<s> ^child-task-segment <child>)
}


sp {subproblem*execute*current*subgoal*execute*subtask*with*conditions*elaborate*predicate-test
   (state <s> ^problem-space.subproblem execute
              ^desired <des>
              ^task-concept-network.procedural.subtasks.subtask <subt>)
   (<des> ^<pnum> <pred>)
   (<pred> ^type subtask
           ^subtask-handle <subh>)
   (<subt> ^handle <subh>
           ^conditions <conds>)
-->
   (<s> ^instantiate-task-argument <arg>)
   (<arg> ^arg-type predicate-set
          ^general-arg-rep <conds>)
   (<s> ^evaluate-subtask-conditions <arg>)
}

sp {subproblem*execute*evaluate-subtask-conditions*elaborate*predicate-test
   (state <s> ^problem-space.subproblem execute
              ^evaluate-subtask-conditions.instantiation <i>)
-->
   (<s> ^predicate-test <i>)
}
