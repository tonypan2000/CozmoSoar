sp {op_go-to-next-waypoint1*propose*leave-old-waypoint
   (state <s> ^name op_go-to-next-waypoint1
              ^old-waypoint <wp>)
-->
   (<s> ^operator <o> +)
   (<o> ^name leave-old-waypoint)
}

sp {op_go-to-next-waypoint1*apply*leave-old-waypoint*remove*current-waypoint
   (state <s> ^name op_go-to-next-waypoint1
              ^operator.name leave-old-waypoint
              ^top-state.world.robot <rob>)
   (<rob> ^current-waypoint <wp>)
-->
   (<rob> ^current-waypoint <wp> -)
}

sp {op_go-to-next-waypoint1*apply*leave-old-waypoint*remove*current-location
   (state <s> ^name op_go-to-next-waypoint1
              ^operator.name leave-old-waypoint
              ^top-state.world.robot <rob>)
   (<rob> ^current-location <loc>)
-->
   (<rob> ^current-location <loc> -)
}

sp {op_go-to-next-waypoint1*apply*leave-old-waypoint*remove*old*location*from*world
   (state <s> ^name op_go-to-next-waypoint1
              ^operator.name leave-old-waypoint
              ^old-location <loc>
              ^top-state.world.objects <objs>)
   (<objs> ^object <loc>)
   (<loc> -^task-object true)
-->
   (<objs> ^object <loc> -)
}


sp {op_go-to-next-waypoint1*apply*leave-old-waypoint*remove*objects
   (state <s> ^name op_go-to-next-waypoint1
              ^operator.name leave-old-waypoint
              ^old-object <obj>
              ^top-state.world.objects <objs>)
   (<objs> ^object <obj>)
   (<obj> ^predicates <preds>)
-->
   (<objs> ^object <obj> -)
   (<preds> ^is-visible1 visible1 -
            ^is-visible1 not-visible1
            ^is-reachable1 reachable1 -
            ^is-reachable1 not-reachable1)
}

sp {op_go-to-next-waypoint1*apply*leave-old-waypoint*remove*old-object*predicates
   (state <s> ^name op_go-to-next-waypoint1
              ^operator.name leave-old-waypoint
              ^old-object <obj>
              ^top-state.world.predicates.predicate <pred>)
   (<pred> ^instance <i>)
   (<i> ^<num> <obj>)
-->
   (<pred> ^instance <i> -)
}
