sp {op_go-to-next-waypoint1*propose*enter-new-waypoint
   (state <s> ^name op_go-to-next-waypoint1
              ^waypoint <wp>
              ^top-state.world.robot <rob>)
   (<rob> -^current-waypoint <wp>)
-->
   (<s> ^operator <o> +)
   (<o> ^name enter-new-waypoint)
}

sp {op_go-to-next-waypoint1*apply*enter-new-waypoint*add*current-waypoint
   (state <s> ^name op_go-to-next-waypoint1
              ^operator.name enter-new-waypoint
              ^waypoint <wp>
              ^top-state.world.robot <rob>)
-->
   (<rob> ^current-waypoint <wp>)
}

sp {op_go-to-next-waypoint1*apply*enter-new-waypoint*add*current-location
   (state <s> ^name op_go-to-next-waypoint1
              ^operator.name enter-new-waypoint
              ^new-location <loc>
              ^top-state.world.robot <rob>)
-->
   (<rob> ^current-location <loc>)
}

sp {op_go-to-next-waypoint1*apply*enter-new-waypoint*add*location*world
   (state <s> ^name op_go-to-next-waypoint1
              ^operator.name enter-new-waypoint
              ^new-location <loc>
              ^top-state.world.objects <objs>)
-->
   (<objs> ^object <loc>)
}

sp {op_go-to-next-waypoint1*apply*enter-new-waypoint*change*grabbed*obj*location
   (state <s> ^name op_go-to-next-waypoint1
              ^operator.name enter-new-waypoint
              ^top-state.world.objects.object <obj>
              ^internal-world.locations <locs>
              ^waypoint.handle <wp-h>)
   (<obj> ^handle <obj-h>
          ^predicates.arm-status grabbed)
   (<locs> ^<obj-h> { <old-wp> <> <wp-h> })
-->
   (<locs> ^<obj-h> <old-wp> -
           ^<obj-h> <wp-h>)
}

sp {op_go-to-next-waypoint1*apply*enter-new-waypoint*add*new*objects
   (state <s> ^name op_go-to-next-waypoint1
              ^operator.name enter-new-waypoint
              ^waypoint.handle <wph>
              ^internal-world.locations.<objh> <wph>
              ^internal-world.objects.object <obj>
              ^top-state.world.objects <objs>)
   (<obj> ^handle <objh>
          ^predicates <preds>)
-->
   (<objs> ^object <obj>)
   (<preds> ^is-visible1 not-visible1 -
            ^is-visible1 visible1
            ^is-reachable1 not-reachable1 -
            ^is-reachable1 reachable1
            ^is-confirmed1 confirmed1)
}

sp {op_go-to-next-waypoint1*apply*enter-new-waypoint*add*in*predicate
   (state <s> ^name op_go-to-next-waypoint1
              ^operator.name enter-new-waypoint
              ^waypoint.handle <wph>
              ^new-location <loc>
              ^internal-world.locations.<objh> <wph>
              ^internal-world.objects.object <obj>
              ^top-state.world.predicates.predicate <in-pred>)
   (<obj> ^handle <objh>)
   (<in-pred> ^handle in1)
   -{(<in-pred> ^instance <cur-i>)
     (<cur-i> ^1 <obj> ^2 <loc>)}
-->
   (<in-pred> ^instance <i>)
   (<i> ^1 <obj> ^2 <loc>)
}
