###############################################################################
#
# Inside the op_go-to-next-waypoint1 substate, this will put a drive-to-waypoint command on the output link
#
###############################################################################

sp {op_go-to-next-waypoint1*propose*send-drive-xy-command*face
   (state <s> ^name op_go-to-next-waypoint1
              ^problem-space.execution-type external
              ^current-task-segment.position-set.next { <next> <> none }
              ^do-face true
              ^current-task-segment.face-command.status success
             -^current-task-segment.drive-command)
-->
   (<s> ^operator <o> + >)
   (<o> ^name send-drive-xy-command
        ^position <next>)
}

sp {op_go-to-next-waypoint1*propose*send-drive-xy-command*no-face
   (state <s> ^name op_go-to-next-waypoint1
              ^problem-space.execution-type external
              ^current-task-segment.position-set.next { <next> <> none }
              ^do-face false
             -^current-task-segment.drive-command)
-->
   (<s> ^operator <o> + >)
   (<o> ^name send-drive-xy-command
        ^position <next>)
}

sp {op_go-to-next-waypoint1*apply*send-drive-xy-command
   (state <s> ^name op_go-to-next-waypoint1
              ^operator <o>
              ^top-state.io.output-link <out>
              ^current-task-segment <seg>)
   (<o> ^name send-drive-xy-command
        ^position <pos>)
   (<pos> ^x <x> ^y <y>)
-->
   (<out> ^do-control-law <law>)
   (<law> ^item-type output-command
          ^name drive-xy
          ^parameters <params>
          ^termination-condition.name stabilized)
   (<params> ^x <x> ^y <y>)
   (<seg> ^drive-command <law>)
}
