sp {op_recall1*propose*create-cue-object
  (state <s> ^name op_recall1
             ^query-object <qo>
             ^epmem-cue.world.objects <objs>)
  (<qo> ^source <src>)
  -{(<qo> ^cue <obj-cue>)
    (<objs> ^object <obj-cue>)}
-->
  (<s> ^operator <o> + =)
  (<o> ^name create-cue-object
       ^object <qo>)
}

sp {op_recall1*apply*create-cue-object*create*object
  (state <s> ^name op_recall1
             ^operator <o>)
  (<o> ^name create-cue-object
       ^object <qo>)
-->
  (<qo> ^cue <obj-cue>)
  (<obj-cue> ^predicates <preds>)
  (<preds> ^is-visible1 visible1)
}

sp {op_recall1*apply*create-cue-object*copy*cue*onto*epmem-cue
  (state <s> ^name op_recall1
             ^operator <o>
             ^epmem-cue.world.objects <objs>)
  (<o> ^name create-cue-object
       ^object.cue <obj-cue>)
-->
  (<objs> ^object <obj-cue>)
}

sp {op_recall1*apply*create-cue-object*copy*handle*smem
  (state <s> ^name op_recall1
             ^operator <o>)
  (<o> ^name create-cue-object
       ^object <obj>)
  (<obj> ^source <src>
         ^cue <obj-cue>)
  (<src> ^in-smem true
         ^handle <h>)
-->
  (<obj-cue> ^handle <h>)
}

sp {op_recall1*apply*create-cue-object*copy*predicates
  (state <s> ^name op_recall1
             ^operator <o>)
  (<o> ^name create-cue-object
       ^object <obj>)
  (<obj> ^source.predicates.{ <prop> << modifier1 category name shape property color >> } <pred>
         ^cue.predicates <preds>)
-->
  (<preds> ^<prop> <pred>)
}

