sp {op_recall1*propose*report-success
   (state <s> ^name op_recall1)
-->
   (<s> ^operator <o> + <)
   (<o> ^name report-success)
}

sp {op_recall1*apply*report-success*mark*finished
   (state <s> ^name op_recall1
              ^operator.name report-success
              ^current-task-segment <seg>)
-->
   (<seg> ^status success)
}

sp {op_recall*apply*report-success*object
   (state <s> ^name op_recall1
              ^operator.name report-success
              ^task-operator.<arg-name> <arg>
              ^retrieved-episode { <ep> <> none }
              ^world.objects <objs>
              ^parent-task-segment <seg>)
   (<arg> ^arg-type object
          ^id <obj>)
   (<objs> -^object <obj>)
-->
   (<objs> ^object <obj>)
   (<seg> ^added <obj>)
}

sp {op_recall*apply*report-success*predicate
   (state <s> ^name op_recall1
              ^operator.name report-success
              ^task-operator.<arg1-name> <arg1>
              ^task-operator.<arg2-name> <arg2>
              ^retrieved-episode { <ep> <> none }
              ^world.objects <objs>
              ^world.predicates.predicate <pred>
              ^parent-task-segment <seg>)
   (<arg1> ^arg-type object
           ^id <obj1>)
   (<arg2> ^arg-type partial-predicate
           ^handle <pred-handle>
           ^2 <obj2>)
   (<pred> ^handle <pred-handle>)
   -{(<pred> ^instance <i>)
     (<i> ^1 <obj1> ^2 <obj2>)}
-->
   (<pred> ^instance <i>)
   (<i> ^1 <obj1> ^2 <obj2>)
   (<objs> ^object <obj2>)
   (<seg> ^added <obj2>)
}
