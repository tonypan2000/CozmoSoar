sp {op_ask*propose*record-answer
   (state <s> ^name op_ask1
              ^current-task-segment.answer <ans>
             -^added-answer)
-->
   (<s> ^operator <o> +)
   (<o> ^name record-answer
        ^answer <ans>)
}

sp {op_ask*apply*record-answer*object*mark*added
   (state <s> ^name op_ask1
              ^operator <o>
              ^world.objects.object <obj>
              ^top-state.task-stack.bottom <bot>)
   (<o> ^name record-answer
        ^answer <ans>)
   (<ans> ^item-type object
          ^handle <handle>)
   (<obj> ^handle <handle>
          ^predicates <preds>)
-->
   (<preds> ^modifier1 answer1)
   (<s> ^added-answer <obj>)
   (<bot> ^answer <obj>)
}

sp {op_ask*apply*record-answer*object*imagined-obj*add-to-world
   (state <s> ^name op_ask1
              ^operator <o>
             -^world.objects.object.handle <handle>
              ^top-state.perception-monitor.changes <chgs>)
   (<o> ^name record-answer
        ^answer <ans>)
   (<ans> ^item-type object
          ^handle <handle>
         -^object-instance true)
-->
   (<chgs> ^change <c>)
   (<c> ^type new-object
        ^imagined-obj <ans>)
}

sp {op_ask*apply*record-answer*object*smem-obj*add-to-world
   (state <s> ^name op_ask1
              ^operator <o>
             -^world.objects.object.handle <handle>
              ^top-state.perception-monitor.changes <chgs>)
   (<o> ^name record-answer
        ^answer <ans>)
   (<ans> ^item-type object
          ^handle <handle>
          ^object-instance true)
-->
   (<chgs> ^change <c>)
   (<c> ^type new-object
        ^smem-obj <ans>)
}

sp {op_ask*apply*record-answer*yes*add*imagined*obj
   (state <s> ^name op_ask1
              ^operator <o>
              ^top-state.perception-monitor.changes <chgs>)
   (<o> ^name record-answer
        ^answer yes)
-->
   (<chgs> ^change <c>)
   (<c> ^type new-object
        ^imagined-obj <obj>)
   (<obj> ^handle (make-constant-symbol |obj-hand|)
          ^item-type object
          ^predicates <preds>)
   (<preds> ^category answer ^subcategory yes1)
   (<s> ^added-answer <obj>)
}

sp {op_ask*apply*record-answer*no*add*imagined*obj
   (state <s> ^name op_ask1
              ^operator <o>
              ^top-state.perception-monitor.changes <chgs>)
   (<o> ^name record-answer
        ^answer no)
-->
   (<chgs> ^change <c>)
   (<c> ^type new-object
        ^imagined-obj <obj>)
   (<obj> ^handle (make-constant-symbol |obj-hand|)
          ^item-type object
          ^predicates <preds>)
   (<preds> ^category answer ^subcategory no1)
   (<s> ^added-answer <obj>)
}

sp {op_ask*apply*record-answer*sentence
   (state <s> ^name op_ask1
              ^operator <o>
              ^world.objects <objs>)
   (<o> ^name record-answer
        ^answer { <ans> <> yes <> no })
   (<ans> -^item-type object)
-->
   (<objs> ^object <obj>)
   (<obj> ^handle (make-constant-symbol |obj-hand|)
          ^item-type object
          ^predicates <preds>)
   (<preds> ^category object ^modifier1 answer1 ^sentence <ans>)
   (<s> ^added-answer <obj>)
}
   
