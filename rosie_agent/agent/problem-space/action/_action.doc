These are rules for the action problem-space
They are organized by the problem-space structure

See action_source.soar for a description of this directory contents


problem-space
	^name action
   ^propose-subtasks << true false >>
      If true, proposes operators for known tasks [see propose-subtasks.soar]
   ^propose-driving-operators << true false >>
      If true, proposes operators for the driving tasks [see propose-driving-operators.soar]
      These have no preconditions/action models 
			
			
These rules are general elaboration rules that can apply to any state that has the proper structures

## task-concept-network
 The smem lti and substructure with information about the current task
 By default, elaborated from the superstate
 
## task-operator
 The superoperator for the task being executed
 By default, its from superstate.operator
   But it can be deep copied if there is a ^deep-copy-task-operator <op> on the state
   (for example, during evaluate-operator)
 
