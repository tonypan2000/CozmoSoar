sp {learn-goal-definition*elaborate*generalize-task-argument*conditional*predicates
   (state <s> ^name learn-goal-definition
              ^task-operator <task-op>
              ^task-concept-network.procedural <tcn-proc>)
-->
   (<s> ^reference-task-op <task-op>
        ^reference-tcn-proc <tcn-proc>)
}

sp {learn-goal-definition*elaborate*generalize-task-argument*object*reference-info
   (state <s> ^name learn-goal-definition
              ^generalize-task-argument <arg>
              ^reference-info <info>)
   (<arg> ^arg-type object
          ^instantiation <i>)
   (<i> ^id <obj>)
   (<info> ^referent <obj>)
-->
   (<i> ^reference-info <info>)
}

sp {learn-goal-definition*elaborate*generalized-conditions*onto*goal
   (state <s> ^name learn-goal-definition
              ^generalize-task-argument <arg>
              ^generalized-goal <goal>)
   (<arg> ^arg-type predicate-set
          ^type goal-conditions
          ^general-arg-rep <conds>)
-->
   (<goal> ^conditions <conds>)
}


# ENUMERATE: 1-5 goal conditions
sp {learn-goal-definition*elaborate*generalize-task-argument*predicate-set*1*conditions
   (state <s> ^name learn-goal-definition
              ^superstate.operator <o>)
   (<o> ^goal-condition <c1>
       -^goal-condition { <c2> <> <c1> })
-->
   (<s> ^generalize-task-argument <gen-arg>)
   (<gen-arg> ^arg-type predicate-set
              ^type goal-conditions
              ^instantiation <ins>)
   (<ins> ^pred-count 1
          ^1 <c1>)
}

sp {learn-goal-definition*elaborate*generalize-task-argument*predicate-set*2*conditions
   (state <s> ^name learn-goal-definition
              ^superstate.operator <o>)
   (<o> ^goal-condition <c1>
        ^goal-condition { <c2> > <c1> }
       -^goal-condition { <c3> <> <c2> <> <c1> })
-->
   (<s> ^generalize-task-argument <gen-arg>)
   (<gen-arg> ^arg-type predicate-set
              ^type goal-conditions
              ^instantiation <ins>)
   (<ins> ^pred-count 2
          ^1 <c1>
          ^2 <c2>)
}

sp {learn-goal-definition*elaborate*generalize-task-argument*predicate-set*3*conditions
   (state <s> ^name learn-goal-definition
              ^superstate.operator <o>)
   (<o> ^goal-condition <c1>
        ^goal-condition { <c2> > <c1> }
        ^goal-condition { <c3> > <c2> }
       -^goal-condition { <c4> <> <c3> <> <c2> <> <c1> })
-->
   (<s> ^generalize-task-argument <gen-arg>)
   (<gen-arg> ^arg-type predicate-set
              ^type goal-conditions
              ^instantiation <ins>)
   (<ins> ^pred-count 3
          ^1 <c1>
          ^2 <c2>
          ^3 <c3>)
}

sp {learn-goal-definition*elaborate*generalize-task-argument*predicate-set*4*conditions
   (state <s> ^name learn-goal-definition
              ^superstate.operator <o>)
   (<o> ^goal-condition <c1>
        ^goal-condition { <c2> > <c1> }
        ^goal-condition { <c3> > <c2> }
        ^goal-condition { <c4> > <c3> }
       -^goal-condition { <c5> <> <c4> <> <c3> <> <c2> <> <c1> })
-->
   (<s> ^generalize-task-argument <gen-arg>)
   (<gen-arg> ^arg-type predicate-set
              ^type goal-conditions
              ^instantiation <ins>)
   (<ins> ^pred-count 4
          ^1 <c1>
          ^2 <c2>
          ^3 <c3>
          ^4 <c4>)
}

sp {learn-goal-definition*elaborate*generalize-task-argument*predicate-set*5*conditions
   (state <s> ^name learn-goal-definition
              ^superstate.operator <o>)
   (<o> ^goal-condition <c1>
        ^goal-condition { <c2> > <c1> }
        ^goal-condition { <c3> > <c2> }
        ^goal-condition { <c4> > <c3> }
        ^goal-condition { <c5> > <c4> }
       -^goal-condition { <p6> <> <c5> <> <c4> <> <c3> <> <c2> <> <c1> })
-->
   (<s> ^generalize-task-argument <gen-arg>)
   (<gen-arg> ^arg-type predicate-set
              ^type goal-conditions
              ^instantiation <ins>)
   (<ins> ^pred-count 5
          ^1 <c1>
          ^2 <c2>
          ^3 <c3>
          ^4 <c4>
          ^5 <c5>)
}
