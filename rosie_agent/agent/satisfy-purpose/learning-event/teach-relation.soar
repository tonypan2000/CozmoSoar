sp {learning-event*propose*learn-relation
   (state <s> ^name learning-event
              ^purpose <p>)
   (<p> ^type teach-relation
        ^parameters <params>)
   (<params> ^object <obj1>
             ^relation <rel>)
   (<rel> ^handle <handle> ^2 <obj2>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name learn-relation
        ^handle <handle>
        ^1 <obj1>
        ^2 <obj2>)
}

sp {learn-relation*elaborate*problem-space
   (state <s> ^name learn-relation)
-->
   (<s> ^problem-space <ps>)
   (<ps> ^perception.attend-to-all-perception yes)
}

sp {learn-relation*elaborate*obj1
   (state <s> ^name learn-relation
              ^superstate.operator.{1} <obj1>)
-->
   (<s> ^obj1 <obj1>)
}
sp {learn-relation*elaborate*obj2
   (state <s> ^name learn-relation
              ^superstate.operator.{2} <obj2>)
-->
   (<s> ^obj2 <obj2>)
}
sp {learn-relation*elaborate*predicate-handle
   (state <s> ^name learn-relation
              ^superstate.operator.handle <h>)
-->
   (<s> ^predicate-handle <h>)
}

sp {learn-relation*prefer*attend*over*others
   (state <s> ^name learn-relation
              ^operator <o1> +
              ^operator <o2> +)
   (<o1> ^name attend-to-scene-change)
   (<o2> ^name add-object-to-world)
-->
   (<s> ^operator <o1> > <o2>)
}

sp {learn-relation*propose*add-object-to-world*smem
   (state <s> ^name learn-relation
              ^{ << obj1 obj2 >> } <obj>
             -^added <obj>)
   (<obj> ^object-instance true
          ^handle <h>)
-->
   (<s> ^operator <o> + =)
   (<o> ^name add-object-to-world
        ^type smem-obj
        ^source <obj>)
}

sp {learn-relation*propose*add-object-to-world*imagined
   (state <s> ^name learn-relation
              ^{ << obj1 obj2 >> } <obj>
             -^added <obj>
             -^top-state.world.objects.object <obj>)
   (<obj> -^object-instance true)
-->
   (<s> ^operator <o> + =)
   (<o> ^name add-object-to-world
        ^type imagined-obj
        ^source <obj>)
}

sp {learn-relation*apply*add-object-to-world
   (state <s> ^name learn-relation
              ^operator <o>
              ^top-state.perception-monitor.changes <chgs>)
   (<o> ^name add-object-to-world
        ^type <type>
        ^source <obj>)
-->
   (<chgs> ^change <c>)
   (<c> ^type new-object
        ^<type> <obj>)
   (<s> ^added <obj>)
}

sp {learn-relation*propose*complete-learn-relation
   (state <s> ^name learn-relation)
-->
   (<s> ^operator <o> + <)
   (<o> ^name complete-learn-relation)
}

sp {learn-relation*apply*complete-learn-relation*add
   (state <s> ^name learn-relation
              ^operator.name complete-learn-relation
              ^obj1.handle <h1>
              ^obj2.handle <h2>
              ^predicate-handle <h>
              ^top-state.world.objects <objs>
              ^top-state.world.predicates.predicate <p>)
   (<objs> ^object <obj1>
           ^object <obj2>)
   (<obj1> ^handle <h1>)
   (<obj2> ^handle <h2>)
   (<p> ^handle <h>)
   -{(<p> ^instance <cur-i>)
     (<cur-i> ^1 <obj1> ^2 <obj2>)}

-->
   (<p> ^instance <i>)
   (<i> ^1 <obj1> ^2 <obj2>)
}

sp {learn-relation*apply*complete-learn-relation*performed
   (state <s> ^name learn-relation
              ^operator.name complete-learn-relation
              ^top-state.interaction.status <status>)
-->
   (<status> ^performed.learning-event.type relation)
}

              
